//////////////////////////////////////////////////////////
// This class has been automatically generated on
// Thu Mar 20 14:07:03 2025 by ROOT version 6.32.04
// from TTree BPHY25/BPHY25
// found on file: user.yinjie.43547425.BPHY25Analysis._000001.root
//////////////////////////////////////////////////////////

#ifndef header_h
#define header_h

#include <TROOT.h>
#include <TChain.h>
#include <TFile.h>

// Header file for the classes stored in the TTree if any.
#include <fstream> 
#include <iostream>
#include "vector"
#include "map"
#include "utility"
#include "string"

#define SIZE 1000

class header {
public :
   TTree          *fChain;   //!pointer to the analyzed TTree or TChain
   Int_t           fCurrent; //!current Tree number in a TChain

// Fixed size dimensions of array or collections stored in the TTree if any.

   // Declaration of leaf types
   UInt_t          run_number;
   ULong64_t       event_number;
   Int_t           lumi_block;
   Int_t           npv;
   vector<float>   *pv_z;
   vector<float>   *pv_sigma_z;
   vector<unsigned int> *pv_type;
   Float_t         evt_wt;
   Float_t         pu_wt;
   Float_t         pu_wt_sys_up;
   Float_t         pu_wt_sys_dn;
   Float_t         corr_scaled_mu;
   Bool_t          pass_grl;
   Bool_t          err_pixel;
   Bool_t          err_sct;
   Bool_t          err_trt;
   Bool_t          err_lar;
   Bool_t          err_tile;
   Bool_t          err_muon;
   Bool_t          err_bitset;
   Int_t           L1_n;
   vector<string>  *L1_name;
   Int_t           L1_prescale[SIZE];   //[L1_n]
   Int_t           HLT_n;
   vector<string>  *HLT_name;
   Int_t           HLT_prescale[SIZE];   //[HLT_n]
   Int_t           TQ_n;
   Int_t           TQ_channel[SIZE];   //[TQ_n]
   Double_t        TQ_PV_Ref_x[SIZE];   //[TQ_n]
   Double_t        TQ_PV_Ref_y[SIZE];   //[TQ_n]
   Double_t        TQ_PV_Ref_z[SIZE];   //[TQ_n]
   Double_t        TQ_PV_Ref_cov_xx[SIZE];   //[TQ_n]
   Double_t        TQ_PV_Ref_cov_yy[SIZE];   //[TQ_n]
   Double_t        TQ_PV_Ref_cov_zz[SIZE];   //[TQ_n]
   Double_t        TQ_PV_Ref_cov_xy[SIZE];   //[TQ_n]
   Double_t        TQ_PV_Ref_cov_yz[SIZE];   //[TQ_n]
   Double_t        TQ_PV_Ref_cov_zx[SIZE];   //[TQ_n]
   Double_t        TQ_PV_Ref_ptsum[SIZE];   //[TQ_n]
   Int_t           TQ_PV_idx[SIZE];   //[TQ_n]
   Double_t        TQ_VTX_mass[SIZE];   //[TQ_n]
   Double_t        TQ_VTX_massErr[SIZE];   //[TQ_n]
   Double_t        TQ_fitChi2[SIZE];   //[TQ_n]
   Int_t           TQ_fitNDF[SIZE];   //[TQ_n]
   Double_t        TQ_eta[SIZE];   //[TQ_n]
   Double_t        TQ_phi[SIZE];   //[TQ_n]
   Double_t        TQ_pT[SIZE];   //[TQ_n]
   Double_t        TQ_pT_error[SIZE];   //[TQ_n]
   Double_t        TQ_a0[SIZE];   //[TQ_n]
   Double_t        TQ_a0Err[SIZE];   //[TQ_n]
   Double_t        TQ_a0xy[SIZE];   //[TQ_n]
   Double_t        TQ_a0xyErr[SIZE];   //[TQ_n]
   Double_t        TQ_z0[SIZE];   //[TQ_n]
   Double_t        TQ_z0Err[SIZE];   //[TQ_n]
   Double_t        TQ_Lxy[SIZE];   //[TQ_n]
   Double_t        TQ_Lxy_err[SIZE];   //[TQ_n]
   Double_t        TQ_Lxy_sig[SIZE];   //[TQ_n]
   Double_t        JX_fitChi2[SIZE];   //[TQ_n]
   Int_t           JX_fitNDF[SIZE];   //[TQ_n]
   Double_t        JX_lxy[SIZE];   //[TQ_n]
   Double_t        JX_lxyErr[SIZE];   //[TQ_n]
   Double_t        JX_a0xy[SIZE];   //[TQ_n]
   Double_t        JX_a0xyErr[SIZE];   //[TQ_n]
   Double_t        JX_a0z[SIZE];   //[TQ_n]
   Double_t        JX_a0zErr[SIZE];   //[TQ_n]
   Double_t        JX_m[SIZE];   //[TQ_n]
   Double_t        JX_pT[SIZE];   //[TQ_n]
   Double_t        JX_eta[SIZE];   //[TQ_n]
   Double_t        JX_phi[SIZE];   //[TQ_n]
   Double_t        JX_RfMuon1_m[SIZE];   //[TQ_n]
   Double_t        JX_RfMuon1_pT[SIZE];   //[TQ_n]
   Double_t        JX_RfMuon1_eta[SIZE];   //[TQ_n]
   Double_t        JX_RfMuon1_phi[SIZE];   //[TQ_n]
   Double_t        JX_RfMuon2_m[SIZE];   //[TQ_n]
   Double_t        JX_RfMuon2_pT[SIZE];   //[TQ_n]
   Double_t        JX_RfMuon2_eta[SIZE];   //[TQ_n]
   Double_t        JX_RfMuon2_phi[SIZE];   //[TQ_n]
   Double_t        JX_RfTrack3_m[SIZE];   //[TQ_n]
   Double_t        JX_RfTrack3_pT[SIZE];   //[TQ_n]
   Double_t        JX_RfTrack3_eta[SIZE];   //[TQ_n]
   Double_t        JX_RfTrack3_phi[SIZE];   //[TQ_n]
   Double_t        JX_RfTrack4_m[SIZE];   //[TQ_n]
   Double_t        JX_RfTrack4_pT[SIZE];   //[TQ_n]
   Double_t        JX_RfTrack4_eta[SIZE];   //[TQ_n]
   Double_t        JX_RfTrack4_phi[SIZE];   //[TQ_n]
   Double_t        D_lxy[SIZE];   //[TQ_n]
   Double_t        D_lxyErr[SIZE];   //[TQ_n]
   Double_t        D_a0xy[SIZE];   //[TQ_n]
   Double_t        D_a0xyErr[SIZE];   //[TQ_n]
   Double_t        D_a0z[SIZE];   //[TQ_n]
   Double_t        D_a0zErr[SIZE];   //[TQ_n]
   Double_t        D_m[SIZE];   //[TQ_n]
   Double_t        D_pT[SIZE];   //[TQ_n]
   Double_t        D_eta[SIZE];   //[TQ_n]
   Double_t        D_phi[SIZE];   //[TQ_n]
   Double_t        D_RfTrack7_m[SIZE];   //[TQ_n]
   Double_t        D_RfTrack7_pT[SIZE];   //[TQ_n]
   Double_t        D_RfTrack7_eta[SIZE];   //[TQ_n]
   Double_t        D_RfTrack7_phi[SIZE];   //[TQ_n]
   Double_t        D_RfTrack8_m[SIZE];   //[TQ_n]
   Double_t        D_RfTrack8_pT[SIZE];   //[TQ_n]
   Double_t        D_RfTrack8_eta[SIZE];   //[TQ_n]
   Double_t        D_RfTrack8_phi[SIZE];   //[TQ_n]
   Double_t        D_RfTrack9_m[SIZE];   //[TQ_n]
   Double_t        D_RfTrack9_pT[SIZE];   //[TQ_n]
   Double_t        D_RfTrack9_eta[SIZE];   //[TQ_n]
   Double_t        D_RfTrack9_phi[SIZE];   //[TQ_n]
   Int_t           Ld_type[SIZE];   //[TQ_n]
   Double_t        Ld_fitChi2[SIZE];   //[TQ_n]
   Int_t           Ld_fitNDF[SIZE];   //[TQ_n]
   Double_t        Ld_lxy[SIZE];   //[TQ_n]
   Double_t        Ld_lxyErr[SIZE];   //[TQ_n]
   Double_t        Ld_a0xy[SIZE];   //[TQ_n]
   Double_t        Ld_a0xyErr[SIZE];   //[TQ_n]
   Double_t        Ld_a0z[SIZE];   //[TQ_n]
   Double_t        Ld_a0zErr[SIZE];   //[TQ_n]
   Int_t           Ld_gfit[SIZE];   //[TQ_n]
   Double_t        Ld_gmass[SIZE];   //[TQ_n]
   Double_t        Ld_gmasserr[SIZE];   //[TQ_n]
   Double_t        Ld_gchisq[SIZE];   //[TQ_n]
   Int_t           Ld_gndof[SIZE];   //[TQ_n]
   Double_t        Ld_gprob[SIZE];   //[TQ_n]
   Double_t        Ld_m[SIZE];   //[TQ_n]
   Double_t        Ld_pT[SIZE];   //[TQ_n]
   Double_t        Ld_eta[SIZE];   //[TQ_n]
   Double_t        Ld_phi[SIZE];   //[TQ_n]
   Double_t        Ld_RfTrack5_m[SIZE];   //[TQ_n]
   Double_t        Ld_RfTrack5_pT[SIZE];   //[TQ_n]
   Double_t        Ld_RfTrack5_eta[SIZE];   //[TQ_n]
   Double_t        Ld_RfTrack5_phi[SIZE];   //[TQ_n]
   Double_t        Ld_RfTrack6_m[SIZE];   //[TQ_n]
   Double_t        Ld_RfTrack6_pT[SIZE];   //[TQ_n]
   Double_t        Ld_RfTrack6_eta[SIZE];   //[TQ_n]
   Double_t        Ld_RfTrack6_phi[SIZE];   //[TQ_n]
   Int_t           Muon1_charge[SIZE];   //[TQ_n]
   Double_t        Muon1_e[SIZE];   //[TQ_n]
   Double_t        Muon1_pT[SIZE];   //[TQ_n]
   Double_t        Muon1_eta[SIZE];   //[TQ_n]
   Double_t        Muon1_phi[SIZE];   //[TQ_n]
   Double_t        Muon1_pz[SIZE];   //[TQ_n]
   Double_t        Muon1_d0[SIZE];   //[TQ_n]
   Double_t        Muon1_z0[SIZE];   //[TQ_n]
   Double_t        Muon1_trkComb_pT[SIZE];   //[TQ_n]
   Double_t        Muon1_trkMS_pT[SIZE];   //[TQ_n]
   Double_t        Muon1_trkMuonExtr_pT[SIZE];   //[TQ_n]
   Double_t        Muon1_matchChi2[SIZE];   //[TQ_n]
   Double_t        Muon1_matchChi2OverDoF[SIZE];   //[TQ_n]
   Double_t        Muon1_fitChi2[SIZE];   //[TQ_n]
   Double_t        Muon1_fitNdof[SIZE];   //[TQ_n]
   Bool_t          Muon1_isTight[SIZE];   //[TQ_n]
   Bool_t          Muon1_isMedium[SIZE];   //[TQ_n]
   Bool_t          Muon1_isLoose[SIZE];   //[TQ_n]
   Bool_t          Muon1_isVeryLoose[SIZE];   //[TQ_n]
   Bool_t          Muon1_isHighPt[SIZE];   //[TQ_n]
   Bool_t          Muon1_isLowPt[SIZE];   //[TQ_n]
   Bool_t          Muon1_isCombinedMuon[SIZE];   //[TQ_n]
   Bool_t          Muon1_isStandAloneMuon[SIZE];   //[TQ_n]
   Bool_t          Muon1_isSegmentTagged[SIZE];   //[TQ_n]
   Bool_t          Muon1_isCaloTagged[SIZE];   //[TQ_n]
   Bool_t          Muon1_isSiliconAssociatedForward[SIZE];   //[TQ_n]
   Int_t           Muon1_innerSmallHits[SIZE];   //[TQ_n]
   Int_t           Muon1_InnerLargeHits[SIZE];   //[TQ_n]
   Int_t           Muon1_middleSmallHits[SIZE];   //[TQ_n]
   Int_t           Muon1_middleLargeHits[SIZE];   //[TQ_n]
   Int_t           Muon1_outerSmallHits[SIZE];   //[TQ_n]
   Int_t           Muon1_outerLargeHits[SIZE];   //[TQ_n]
   Int_t           Muon1_extendedSmallHits[SIZE];   //[TQ_n]
   Int_t           Muon1_extendedLargeHits[SIZE];   //[TQ_n]
   Int_t           Muon1_nprecisionHoleLayers[SIZE];   //[TQ_n]
   Int_t           Muon1_nprecisionLayers[SIZE];   //[TQ_n]
   Int_t           Muon1_ExpIBLayer[SIZE];   //[TQ_n]
   Int_t           Muon1_NIBLayer[SIZE];   //[TQ_n]
   Int_t           Muon1_ExpBLayer[SIZE];   //[TQ_n]
   Int_t           Muon1_NBLayer[SIZE];   //[TQ_n]
   Int_t           Muon1_nDeadPixels[SIZE];   //[TQ_n]
   Int_t           Muon1_nDeadSCT[SIZE];   //[TQ_n]
   Int_t           Muon1_nPIXHoles[SIZE];   //[TQ_n]
   Int_t           Muon1_nPIXhits[SIZE];   //[TQ_n]
   Int_t           Muon1_nSCTHoles[SIZE];   //[TQ_n]
   Int_t           Muon1_nSCThits[SIZE];   //[TQ_n]
   Int_t           Muon1_nTRThits[SIZE];   //[TQ_n]
   Int_t           Muon1_nTRToutliers[SIZE];   //[TQ_n]
   Double_t        Muon1_pixeldEdx[SIZE];   //[TQ_n]
   Int_t           Muon1_nUsedHitsdEdx[SIZE];   //[TQ_n]
   Int_t           Muon1_nIBLOFsdEdx[SIZE];   //[TQ_n]
   Double_t        Muon1_eLoss_fit[SIZE];   //[TQ_n]
   Double_t        Muon1_eLoss_par[SIZE];   //[TQ_n]
   Double_t        Muon1_eLoss_mes[SIZE];   //[TQ_n]
   Float_t         Muon1_momentumBalanceSignificance[SIZE];   //[TQ_n]
   Float_t         Muon1_scatteringCurvatureSignificance[SIZE];   //[TQ_n]
   Float_t         Muon1_scatteringNeighbourSignificance[SIZE];   //[TQ_n]
   Float_t         Muon1_medium_EFF_RECO_nominal[SIZE];   //[TQ_n]
   Float_t         Muon1_medium_EFF_RECO_STAT_down[SIZE];   //[TQ_n]
   Float_t         Muon1_medium_EFF_RECO_STAT_up[SIZE];   //[TQ_n]
   Float_t         Muon1_medium_EFF_RECO_STAT_LOWPT_down[SIZE];   //[TQ_n]
   Float_t         Muon1_medium_EFF_RECO_STAT_LOWPT_up[SIZE];   //[TQ_n]
   Float_t         Muon1_medium_EFF_RECO_SYS_down[SIZE];   //[TQ_n]
   Float_t         Muon1_medium_EFF_RECO_SYS_up[SIZE];   //[TQ_n]
   Float_t         Muon1_medium_EFF_RECO_SYS_LOWPT_down[SIZE];   //[TQ_n]
   Float_t         Muon1_medium_EFF_RECO_SYS_LOWPT_up[SIZE];   //[TQ_n]
   Float_t         Muon1_lowpt_EFF_RECO_nominal[SIZE];   //[TQ_n]
   Float_t         Muon1_lowpt_EFF_RECO_STAT_down[SIZE];   //[TQ_n]
   Float_t         Muon1_lowpt_EFF_RECO_STAT_up[SIZE];   //[TQ_n]
   Float_t         Muon1_lowpt_EFF_RECO_STAT_LOWPT_down[SIZE];   //[TQ_n]
   Float_t         Muon1_lowpt_EFF_RECO_STAT_LOWPT_up[SIZE];   //[TQ_n]
   Float_t         Muon1_lowpt_EFF_RECO_SYS_down[SIZE];   //[TQ_n]
   Float_t         Muon1_lowpt_EFF_RECO_SYS_up[SIZE];   //[TQ_n]
   Float_t         Muon1_lowpt_EFF_RECO_SYS_LOWPT_down[SIZE];   //[TQ_n]
   Float_t         Muon1_lowpt_EFF_RECO_SYS_LOWPT_up[SIZE];   //[TQ_n]
   Float_t         Muon1_loose_EFF_RECO_nominal[SIZE];   //[TQ_n]
   Float_t         Muon1_loose_EFF_RECO_STAT_down[SIZE];   //[TQ_n]
   Float_t         Muon1_loose_EFF_RECO_STAT_up[SIZE];   //[TQ_n]
   Float_t         Muon1_loose_EFF_RECO_STAT_LOWPT_down[SIZE];   //[TQ_n]
   Float_t         Muon1_loose_EFF_RECO_STAT_LOWPT_up[SIZE];   //[TQ_n]
   Float_t         Muon1_loose_EFF_RECO_SYS_down[SIZE];   //[TQ_n]
   Float_t         Muon1_loose_EFF_RECO_SYS_up[SIZE];   //[TQ_n]
   Float_t         Muon1_loose_EFF_RECO_SYS_LOWPT_down[SIZE];   //[TQ_n]
   Float_t         Muon1_loose_EFF_RECO_SYS_LOWPT_up[SIZE];   //[TQ_n]
   Float_t         Muon1_CB_down[SIZE];   //[TQ_n]
   Float_t         Muon1_CB_up[SIZE];   //[TQ_n]
   Float_t         Muon1_SCALE_down[SIZE];   //[TQ_n]
   Float_t         Muon1_SCALE_up[SIZE];   //[TQ_n]
   Float_t         Muon1_SAGITTA_DATASTAT_down[SIZE];   //[TQ_n]
   Float_t         Muon1_SAGITTA_DATASTAT_up[SIZE];   //[TQ_n]
   Float_t         Muon1_SAGITTA_GLOBAL_down[SIZE];   //[TQ_n]
   Float_t         Muon1_SAGITTA_GLOBAL_up[SIZE];   //[TQ_n]
   Float_t         Muon1_SAGITTA_PTEXTRA_down[SIZE];   //[TQ_n]
   Float_t         Muon1_SAGITTA_PTEXTRA_up[SIZE];   //[TQ_n]
   Float_t         Muon1_SAGITTA_RESBIAS_down[SIZE];   //[TQ_n]
   Float_t         Muon1_SAGITTA_RESBIAS_up[SIZE];   //[TQ_n]
   Float_t         Muon1_Nominal[SIZE];   //[TQ_n]
   Int_t           Muon2_charge[SIZE];   //[TQ_n]
   Double_t        Muon2_e[SIZE];   //[TQ_n]
   Double_t        Muon2_pT[SIZE];   //[TQ_n]
   Double_t        Muon2_eta[SIZE];   //[TQ_n]
   Double_t        Muon2_phi[SIZE];   //[TQ_n]
   Double_t        Muon2_pz[SIZE];   //[TQ_n]
   Double_t        Muon2_d0[SIZE];   //[TQ_n]
   Double_t        Muon2_z0[SIZE];   //[TQ_n]
   Double_t        Muon2_trkComb_pT[SIZE];   //[TQ_n]
   Double_t        Muon2_trkMS_pT[SIZE];   //[TQ_n]
   Double_t        Muon2_trkMuonExtr_pT[SIZE];   //[TQ_n]
   Double_t        Muon2_matchChi2[SIZE];   //[TQ_n]
   Double_t        Muon2_matchChi2OverDoF[SIZE];   //[TQ_n]
   Double_t        Muon2_fitChi2[SIZE];   //[TQ_n]
   Double_t        Muon2_fitNdof[SIZE];   //[TQ_n]
   Bool_t          Muon2_isTight[SIZE];   //[TQ_n]
   Bool_t          Muon2_isMedium[SIZE];   //[TQ_n]
   Bool_t          Muon2_isLoose[SIZE];   //[TQ_n]
   Bool_t          Muon2_isVeryLoose[SIZE];   //[TQ_n]
   Bool_t          Muon2_isHighPt[SIZE];   //[TQ_n]
   Bool_t          Muon2_isLowPt[SIZE];   //[TQ_n]
   Bool_t          Muon2_isCombinedMuon[SIZE];   //[TQ_n]
   Bool_t          Muon2_isStandAloneMuon[SIZE];   //[TQ_n]
   Bool_t          Muon2_isSegmentTagged[SIZE];   //[TQ_n]
   Bool_t          Muon2_isCaloTagged[SIZE];   //[TQ_n]
   Bool_t          Muon2_isSiliconAssociatedForward[SIZE];   //[TQ_n]
   Int_t           Muon2_innerSmallHits[SIZE];   //[TQ_n]
   Int_t           Muon2_InnerLargeHits[SIZE];   //[TQ_n]
   Int_t           Muon2_middleSmallHits[SIZE];   //[TQ_n]
   Int_t           Muon2_middleLargeHits[SIZE];   //[TQ_n]
   Int_t           Muon2_outerSmallHits[SIZE];   //[TQ_n]
   Int_t           Muon2_outerLargeHits[SIZE];   //[TQ_n]
   Int_t           Muon2_extendedSmallHits[SIZE];   //[TQ_n]
   Int_t           Muon2_extendedLargeHits[SIZE];   //[TQ_n]
   Int_t           Muon2_nprecisionHoleLayers[SIZE];   //[TQ_n]
   Int_t           Muon2_nprecisionLayers[SIZE];   //[TQ_n]
   Int_t           Muon2_ExpIBLayer[SIZE];   //[TQ_n]
   Int_t           Muon2_NIBLayer[SIZE];   //[TQ_n]
   Int_t           Muon2_ExpBLayer[SIZE];   //[TQ_n]
   Int_t           Muon2_NBLayer[SIZE];   //[TQ_n]
   Int_t           Muon2_nDeadPixels[SIZE];   //[TQ_n]
   Int_t           Muon2_nDeadSCT[SIZE];   //[TQ_n]
   Int_t           Muon2_nPIXHoles[SIZE];   //[TQ_n]
   Int_t           Muon2_nPIXhits[SIZE];   //[TQ_n]
   Int_t           Muon2_nSCTHoles[SIZE];   //[TQ_n]
   Int_t           Muon2_nSCThits[SIZE];   //[TQ_n]
   Int_t           Muon2_nTRThits[SIZE];   //[TQ_n]
   Int_t           Muon2_nTRToutliers[SIZE];   //[TQ_n]
   Double_t        Muon2_pixeldEdx[SIZE];   //[TQ_n]
   Int_t           Muon2_nUsedHitsdEdx[SIZE];   //[TQ_n]
   Int_t           Muon2_nIBLOFsdEdx[SIZE];   //[TQ_n]
   Double_t        Muon2_eLoss_fit[SIZE];   //[TQ_n]
   Double_t        Muon2_eLoss_par[SIZE];   //[TQ_n]
   Double_t        Muon2_eLoss_mes[SIZE];   //[TQ_n]
   Float_t         Muon2_momentumBalanceSignificance[SIZE];   //[TQ_n]
   Float_t         Muon2_scatteringCurvatureSignificance[SIZE];   //[TQ_n]
   Float_t         Muon2_scatteringNeighbourSignificance[SIZE];   //[TQ_n]
   Float_t         Muon2_medium_EFF_RECO_nominal[SIZE];   //[TQ_n]
   Float_t         Muon2_medium_EFF_RECO_STAT_down[SIZE];   //[TQ_n]
   Float_t         Muon2_medium_EFF_RECO_STAT_up[SIZE];   //[TQ_n]
   Float_t         Muon2_medium_EFF_RECO_STAT_LOWPT_down[SIZE];   //[TQ_n]
   Float_t         Muon2_medium_EFF_RECO_STAT_LOWPT_up[SIZE];   //[TQ_n]
   Float_t         Muon2_medium_EFF_RECO_SYS_down[SIZE];   //[TQ_n]
   Float_t         Muon2_medium_EFF_RECO_SYS_up[SIZE];   //[TQ_n]
   Float_t         Muon2_medium_EFF_RECO_SYS_LOWPT_down[SIZE];   //[TQ_n]
   Float_t         Muon2_medium_EFF_RECO_SYS_LOWPT_up[SIZE];   //[TQ_n]
   Float_t         Muon2_lowpt_EFF_RECO_nominal[SIZE];   //[TQ_n]
   Float_t         Muon2_lowpt_EFF_RECO_STAT_down[SIZE];   //[TQ_n]
   Float_t         Muon2_lowpt_EFF_RECO_STAT_up[SIZE];   //[TQ_n]
   Float_t         Muon2_lowpt_EFF_RECO_STAT_LOWPT_down[SIZE];   //[TQ_n]
   Float_t         Muon2_lowpt_EFF_RECO_STAT_LOWPT_up[SIZE];   //[TQ_n]
   Float_t         Muon2_lowpt_EFF_RECO_SYS_down[SIZE];   //[TQ_n]
   Float_t         Muon2_lowpt_EFF_RECO_SYS_up[SIZE];   //[TQ_n]
   Float_t         Muon2_lowpt_EFF_RECO_SYS_LOWPT_down[SIZE];   //[TQ_n]
   Float_t         Muon2_lowpt_EFF_RECO_SYS_LOWPT_up[SIZE];   //[TQ_n]
   Float_t         Muon2_loose_EFF_RECO_nominal[SIZE];   //[TQ_n]
   Float_t         Muon2_loose_EFF_RECO_STAT_down[SIZE];   //[TQ_n]
   Float_t         Muon2_loose_EFF_RECO_STAT_up[SIZE];   //[TQ_n]
   Float_t         Muon2_loose_EFF_RECO_STAT_LOWPT_down[SIZE];   //[TQ_n]
   Float_t         Muon2_loose_EFF_RECO_STAT_LOWPT_up[SIZE];   //[TQ_n]
   Float_t         Muon2_loose_EFF_RECO_SYS_down[SIZE];   //[TQ_n]
   Float_t         Muon2_loose_EFF_RECO_SYS_up[SIZE];   //[TQ_n]
   Float_t         Muon2_loose_EFF_RECO_SYS_LOWPT_down[SIZE];   //[TQ_n]
   Float_t         Muon2_loose_EFF_RECO_SYS_LOWPT_up[SIZE];   //[TQ_n]
   Float_t         Muon2_CB_down[SIZE];   //[TQ_n]
   Float_t         Muon2_CB_up[SIZE];   //[TQ_n]
   Float_t         Muon2_SCALE_down[SIZE];   //[TQ_n]
   Float_t         Muon2_SCALE_up[SIZE];   //[TQ_n]
   Float_t         Muon2_SAGITTA_DATASTAT_down[SIZE];   //[TQ_n]
   Float_t         Muon2_SAGITTA_DATASTAT_up[SIZE];   //[TQ_n]
   Float_t         Muon2_SAGITTA_GLOBAL_down[SIZE];   //[TQ_n]
   Float_t         Muon2_SAGITTA_GLOBAL_up[SIZE];   //[TQ_n]
   Float_t         Muon2_SAGITTA_PTEXTRA_down[SIZE];   //[TQ_n]
   Float_t         Muon2_SAGITTA_PTEXTRA_up[SIZE];   //[TQ_n]
   Float_t         Muon2_SAGITTA_RESBIAS_down[SIZE];   //[TQ_n]
   Float_t         Muon2_SAGITTA_RESBIAS_up[SIZE];   //[TQ_n]
   Float_t         Muon2_Nominal[SIZE];   //[TQ_n]
   Bool_t          trk3_pass[SIZE];   //[TQ_n]
   Double_t        trk3_pT[SIZE];   //[TQ_n]
   Double_t        trk3_eta[SIZE];   //[TQ_n]
   Double_t        trk3_phi[SIZE];   //[TQ_n]
   Double_t        trk3_d0[SIZE];   //[TQ_n]
   Double_t        trk3_d0_sig[SIZE];   //[TQ_n]
   Double_t        trk3_z0[SIZE];   //[TQ_n]
   Double_t        trk3_z0_sig[SIZE];   //[TQ_n]
   Double_t        trk3_vx[SIZE];   //[TQ_n]
   Double_t        trk3_vy[SIZE];   //[TQ_n]
   Double_t        trk3_vz[SIZE];   //[TQ_n]
   Double_t        trk3_qOverP[SIZE];   //[TQ_n]
   Bool_t          trk3_passFilter[SIZE];   //[TQ_n]
   Double_t        trk3_d0_bias[SIZE];   //[TQ_n]
   Double_t        trk3_d0_sig_bias[SIZE];   //[TQ_n]
   Double_t        trk3_z0_bias[SIZE];   //[TQ_n]
   Double_t        trk3_z0_sig_bias[SIZE];   //[TQ_n]
   Double_t        trk3_qOverP_bias[SIZE];   //[TQ_n]
   Double_t        trk3_d0_smear[SIZE];   //[TQ_n]
   Double_t        trk3_d0_sig_smear[SIZE];   //[TQ_n]
   Double_t        trk3_z0_smear[SIZE];   //[TQ_n]
   Double_t        trk3_z0_sig_smear[SIZE];   //[TQ_n]
   Int_t           trk3_ExpIBLayer[SIZE];   //[TQ_n]
   Int_t           trk3_NIBLayer[SIZE];   //[TQ_n]
   Int_t           trk3_ExpBLayer[SIZE];   //[TQ_n]
   Int_t           trk3_NBLayer[SIZE];   //[TQ_n]
   Int_t           trk3_nDeadPixels[SIZE];   //[TQ_n]
   Int_t           trk3_nDeadSCT[SIZE];   //[TQ_n]
   Int_t           trk3_nPIXHoles[SIZE];   //[TQ_n]
   Int_t           trk3_nPIXhits[SIZE];   //[TQ_n]
   Int_t           trk3_nSCTHoles[SIZE];   //[TQ_n]
   Int_t           trk3_nSCThits[SIZE];   //[TQ_n]
   Int_t           trk3_nTRThits[SIZE];   //[TQ_n]
   Int_t           trk3_nTRToutliers[SIZE];   //[TQ_n]
   Double_t        trk3_pixeldEdx[SIZE];   //[TQ_n]
   Int_t           trk3_nUsedHitsdEdx[SIZE];   //[TQ_n]
   Int_t           trk3_nIBLOFsdEdx[SIZE];   //[TQ_n]
   Int_t           trk3_charge[SIZE];   //[TQ_n]
   Bool_t          trk4_pass[SIZE];   //[TQ_n]
   Double_t        trk4_pT[SIZE];   //[TQ_n]
   Double_t        trk4_eta[SIZE];   //[TQ_n]
   Double_t        trk4_phi[SIZE];   //[TQ_n]
   Double_t        trk4_d0[SIZE];   //[TQ_n]
   Double_t        trk4_d0_sig[SIZE];   //[TQ_n]
   Double_t        trk4_z0[SIZE];   //[TQ_n]
   Double_t        trk4_z0_sig[SIZE];   //[TQ_n]
   Double_t        trk4_vx[SIZE];   //[TQ_n]
   Double_t        trk4_vy[SIZE];   //[TQ_n]
   Double_t        trk4_vz[SIZE];   //[TQ_n]
   Double_t        trk4_qOverP[SIZE];   //[TQ_n]
   Bool_t          trk4_passFilter[SIZE];   //[TQ_n]
   Double_t        trk4_d0_bias[SIZE];   //[TQ_n]
   Double_t        trk4_d0_sig_bias[SIZE];   //[TQ_n]
   Double_t        trk4_z0_bias[SIZE];   //[TQ_n]
   Double_t        trk4_z0_sig_bias[SIZE];   //[TQ_n]
   Double_t        trk4_qOverP_bias[SIZE];   //[TQ_n]
   Double_t        trk4_d0_smear[SIZE];   //[TQ_n]
   Double_t        trk4_d0_sig_smear[SIZE];   //[TQ_n]
   Double_t        trk4_z0_smear[SIZE];   //[TQ_n]
   Double_t        trk4_z0_sig_smear[SIZE];   //[TQ_n]
   Int_t           trk4_ExpIBLayer[SIZE];   //[TQ_n]
   Int_t           trk4_NIBLayer[SIZE];   //[TQ_n]
   Int_t           trk4_ExpBLayer[SIZE];   //[TQ_n]
   Int_t           trk4_NBLayer[SIZE];   //[TQ_n]
   Int_t           trk4_nDeadPixels[SIZE];   //[TQ_n]
   Int_t           trk4_nDeadSCT[SIZE];   //[TQ_n]
   Int_t           trk4_nPIXHoles[SIZE];   //[TQ_n]
   Int_t           trk4_nPIXhits[SIZE];   //[TQ_n]
   Int_t           trk4_nSCTHoles[SIZE];   //[TQ_n]
   Int_t           trk4_nSCThits[SIZE];   //[TQ_n]
   Int_t           trk4_nTRThits[SIZE];   //[TQ_n]
   Int_t           trk4_nTRToutliers[SIZE];   //[TQ_n]
   Double_t        trk4_pixeldEdx[SIZE];   //[TQ_n]
   Int_t           trk4_nUsedHitsdEdx[SIZE];   //[TQ_n]
   Int_t           trk4_nIBLOFsdEdx[SIZE];   //[TQ_n]
   Int_t           trk4_charge[SIZE];   //[TQ_n]
   Double_t        trk5_pT[SIZE];   //[TQ_n]
   Double_t        trk5_eta[SIZE];   //[TQ_n]
   Double_t        trk5_phi[SIZE];   //[TQ_n]
   Double_t        trk5_d0[SIZE];   //[TQ_n]
   Double_t        trk5_d0_sig[SIZE];   //[TQ_n]
   Double_t        trk5_z0[SIZE];   //[TQ_n]
   Double_t        trk5_z0_sig[SIZE];   //[TQ_n]
   Double_t        trk5_vx[SIZE];   //[TQ_n]
   Double_t        trk5_vy[SIZE];   //[TQ_n]
   Double_t        trk5_vz[SIZE];   //[TQ_n]
   Double_t        trk5_qOverP[SIZE];   //[TQ_n]
   Bool_t          trk5_passFilter[SIZE];   //[TQ_n]
   Int_t           trk5_ExpIBLayer[SIZE];   //[TQ_n]
   Int_t           trk5_NIBLayer[SIZE];   //[TQ_n]
   Int_t           trk5_ExpBLayer[SIZE];   //[TQ_n]
   Int_t           trk5_NBLayer[SIZE];   //[TQ_n]
   Int_t           trk5_nDeadPixels[SIZE];   //[TQ_n]
   Int_t           trk5_nDeadSCT[SIZE];   //[TQ_n]
   Int_t           trk5_nPIXHoles[SIZE];   //[TQ_n]
   Int_t           trk5_nPIXhits[SIZE];   //[TQ_n]
   Int_t           trk5_nSCTHoles[SIZE];   //[TQ_n]
   Int_t           trk5_nSCThits[SIZE];   //[TQ_n]
   Int_t           trk5_nTRThits[SIZE];   //[TQ_n]
   Int_t           trk5_nTRToutliers[SIZE];   //[TQ_n]
   Double_t        trk5_pixeldEdx[SIZE];   //[TQ_n]
   Int_t           trk5_nUsedHitsdEdx[SIZE];   //[TQ_n]
   Int_t           trk5_nIBLOFsdEdx[SIZE];   //[TQ_n]
   Int_t           trk5_charge[SIZE];   //[TQ_n]
   Double_t        trk6_pT[SIZE];   //[TQ_n]
   Double_t        trk6_eta[SIZE];   //[TQ_n]
   Double_t        trk6_phi[SIZE];   //[TQ_n]
   Double_t        trk6_d0[SIZE];   //[TQ_n]
   Double_t        trk6_d0_sig[SIZE];   //[TQ_n]
   Double_t        trk6_z0[SIZE];   //[TQ_n]
   Double_t        trk6_z0_sig[SIZE];   //[TQ_n]
   Double_t        trk6_vx[SIZE];   //[TQ_n]
   Double_t        trk6_vy[SIZE];   //[TQ_n]
   Double_t        trk6_vz[SIZE];   //[TQ_n]
   Double_t        trk6_qOverP[SIZE];   //[TQ_n]
   Bool_t          trk6_passFilter[SIZE];   //[TQ_n]
   Int_t           trk6_ExpIBLayer[SIZE];   //[TQ_n]
   Int_t           trk6_NIBLayer[SIZE];   //[TQ_n]
   Int_t           trk6_ExpBLayer[SIZE];   //[TQ_n]
   Int_t           trk6_NBLayer[SIZE];   //[TQ_n]
   Int_t           trk6_nDeadPixels[SIZE];   //[TQ_n]
   Int_t           trk6_nDeadSCT[SIZE];   //[TQ_n]
   Int_t           trk6_nPIXHoles[SIZE];   //[TQ_n]
   Int_t           trk6_nPIXhits[SIZE];   //[TQ_n]
   Int_t           trk6_nSCTHoles[SIZE];   //[TQ_n]
   Int_t           trk6_nSCThits[SIZE];   //[TQ_n]
   Int_t           trk6_nTRThits[SIZE];   //[TQ_n]
   Int_t           trk6_nTRToutliers[SIZE];   //[TQ_n]
   Double_t        trk6_pixeldEdx[SIZE];   //[TQ_n]
   Int_t           trk6_nUsedHitsdEdx[SIZE];   //[TQ_n]
   Int_t           trk6_nIBLOFsdEdx[SIZE];   //[TQ_n]
   Int_t           trk6_charge[SIZE];   //[TQ_n]
   Bool_t          trk7_pass[SIZE];   //[TQ_n]
   Double_t        trk7_pT[SIZE];   //[TQ_n]
   Double_t        trk7_eta[SIZE];   //[TQ_n]
   Double_t        trk7_phi[SIZE];   //[TQ_n]
   Double_t        trk7_d0[SIZE];   //[TQ_n]
   Double_t        trk7_d0_sig[SIZE];   //[TQ_n]
   Double_t        trk7_z0[SIZE];   //[TQ_n]
   Double_t        trk7_z0_sig[SIZE];   //[TQ_n]
   Double_t        trk7_vx[SIZE];   //[TQ_n]
   Double_t        trk7_vy[SIZE];   //[TQ_n]
   Double_t        trk7_vz[SIZE];   //[TQ_n]
   Double_t        trk7_qOverP[SIZE];   //[TQ_n]
   Bool_t          trk7_passFilter[SIZE];   //[TQ_n]
   Double_t        trk7_d0_bias[SIZE];   //[TQ_n]
   Double_t        trk7_d0_sig_bias[SIZE];   //[TQ_n]
   Double_t        trk7_z0_bias[SIZE];   //[TQ_n]
   Double_t        trk7_z0_sig_bias[SIZE];   //[TQ_n]
   Double_t        trk7_qOverP_bias[SIZE];   //[TQ_n]
   Double_t        trk7_d0_smear[SIZE];   //[TQ_n]
   Double_t        trk7_d0_sig_smear[SIZE];   //[TQ_n]
   Double_t        trk7_z0_smear[SIZE];   //[TQ_n]
   Double_t        trk7_z0_sig_smear[SIZE];   //[TQ_n]
   Int_t           trk7_ExpIBLayer[SIZE];   //[TQ_n]
   Int_t           trk7_NIBLayer[SIZE];   //[TQ_n]
   Int_t           trk7_ExpBLayer[SIZE];   //[TQ_n]
   Int_t           trk7_NBLayer[SIZE];   //[TQ_n]
   Int_t           trk7_nDeadPixels[SIZE];   //[TQ_n]
   Int_t           trk7_nDeadSCT[SIZE];   //[TQ_n]
   Int_t           trk7_nPIXHoles[SIZE];   //[TQ_n]
   Int_t           trk7_nPIXhits[SIZE];   //[TQ_n]
   Int_t           trk7_nSCTHoles[SIZE];   //[TQ_n]
   Int_t           trk7_nSCThits[SIZE];   //[TQ_n]
   Int_t           trk7_nTRThits[SIZE];   //[TQ_n]
   Int_t           trk7_nTRToutliers[SIZE];   //[TQ_n]
   Double_t        trk7_pixeldEdx[SIZE];   //[TQ_n]
   Int_t           trk7_nUsedHitsdEdx[SIZE];   //[TQ_n]
   Int_t           trk7_nIBLOFsdEdx[SIZE];   //[TQ_n]
   Int_t           trk7_charge[SIZE];   //[TQ_n]
   Bool_t          trk8_pass[SIZE];   //[TQ_n]
   Double_t        trk8_pT[SIZE];   //[TQ_n]
   Double_t        trk8_eta[SIZE];   //[TQ_n]
   Double_t        trk8_phi[SIZE];   //[TQ_n]
   Double_t        trk8_d0[SIZE];   //[TQ_n]
   Double_t        trk8_d0_sig[SIZE];   //[TQ_n]
   Double_t        trk8_z0[SIZE];   //[TQ_n]
   Double_t        trk8_z0_sig[SIZE];   //[TQ_n]
   Double_t        trk8_vx[SIZE];   //[TQ_n]
   Double_t        trk8_vy[SIZE];   //[TQ_n]
   Double_t        trk8_vz[SIZE];   //[TQ_n]
   Double_t        trk8_qOverP[SIZE];   //[TQ_n]
   Bool_t          trk8_passFilter[SIZE];   //[TQ_n]
   Double_t        trk8_d0_bias[SIZE];   //[TQ_n]
   Double_t        trk8_d0_sig_bias[SIZE];   //[TQ_n]
   Double_t        trk8_z0_bias[SIZE];   //[TQ_n]
   Double_t        trk8_z0_sig_bias[SIZE];   //[TQ_n]
   Double_t        trk8_qOverP_bias[SIZE];   //[TQ_n]
   Double_t        trk8_d0_smear[SIZE];   //[TQ_n]
   Double_t        trk8_d0_sig_smear[SIZE];   //[TQ_n]
   Double_t        trk8_z0_smear[SIZE];   //[TQ_n]
   Double_t        trk8_z0_sig_smear[SIZE];   //[TQ_n]
   Int_t           trk8_ExpIBLayer[SIZE];   //[TQ_n]
   Int_t           trk8_NIBLayer[SIZE];   //[TQ_n]
   Int_t           trk8_ExpBLayer[SIZE];   //[TQ_n]
   Int_t           trk8_NBLayer[SIZE];   //[TQ_n]
   Int_t           trk8_nDeadPixels[SIZE];   //[TQ_n]
   Int_t           trk8_nDeadSCT[SIZE];   //[TQ_n]
   Int_t           trk8_nPIXHoles[SIZE];   //[TQ_n]
   Int_t           trk8_nPIXhits[SIZE];   //[TQ_n]
   Int_t           trk8_nSCTHoles[SIZE];   //[TQ_n]
   Int_t           trk8_nSCThits[SIZE];   //[TQ_n]
   Int_t           trk8_nTRThits[SIZE];   //[TQ_n]
   Int_t           trk8_nTRToutliers[SIZE];   //[TQ_n]
   Double_t        trk8_pixeldEdx[SIZE];   //[TQ_n]
   Int_t           trk8_nUsedHitsdEdx[SIZE];   //[TQ_n]
   Int_t           trk8_nIBLOFsdEdx[SIZE];   //[TQ_n]
   Int_t           trk8_charge[SIZE];   //[TQ_n]
   Bool_t          trk9_pass[SIZE];   //[TQ_n]
   Double_t        trk9_pT[SIZE];   //[TQ_n]
   Double_t        trk9_eta[SIZE];   //[TQ_n]
   Double_t        trk9_phi[SIZE];   //[TQ_n]
   Double_t        trk9_d0[SIZE];   //[TQ_n]
   Double_t        trk9_d0_sig[SIZE];   //[TQ_n]
   Double_t        trk9_z0[SIZE];   //[TQ_n]
   Double_t        trk9_z0_sig[SIZE];   //[TQ_n]
   Double_t        trk9_vx[SIZE];   //[TQ_n]
   Double_t        trk9_vy[SIZE];   //[TQ_n]
   Double_t        trk9_vz[SIZE];   //[TQ_n]
   Double_t        trk9_qOverP[SIZE];   //[TQ_n]
   Bool_t          trk9_passFilter[SIZE];   //[TQ_n]
   Double_t        trk9_d0_bias[SIZE];   //[TQ_n]
   Double_t        trk9_d0_sig_bias[SIZE];   //[TQ_n]
   Double_t        trk9_z0_bias[SIZE];   //[TQ_n]
   Double_t        trk9_z0_sig_bias[SIZE];   //[TQ_n]
   Double_t        trk9_qOverP_bias[SIZE];   //[TQ_n]
   Double_t        trk9_d0_smear[SIZE];   //[TQ_n]
   Double_t        trk9_d0_sig_smear[SIZE];   //[TQ_n]
   Double_t        trk9_z0_smear[SIZE];   //[TQ_n]
   Double_t        trk9_z0_sig_smear[SIZE];   //[TQ_n]
   Int_t           trk9_ExpIBLayer[SIZE];   //[TQ_n]
   Int_t           trk9_NIBLayer[SIZE];   //[TQ_n]
   Int_t           trk9_ExpBLayer[SIZE];   //[TQ_n]
   Int_t           trk9_NBLayer[SIZE];   //[TQ_n]
   Int_t           trk9_nDeadPixels[SIZE];   //[TQ_n]
   Int_t           trk9_nDeadSCT[SIZE];   //[TQ_n]
   Int_t           trk9_nPIXHoles[SIZE];   //[TQ_n]
   Int_t           trk9_nPIXhits[SIZE];   //[TQ_n]
   Int_t           trk9_nSCTHoles[SIZE];   //[TQ_n]
   Int_t           trk9_nSCThits[SIZE];   //[TQ_n]
   Int_t           trk9_nTRThits[SIZE];   //[TQ_n]
   Int_t           trk9_nTRToutliers[SIZE];   //[TQ_n]
   Double_t        trk9_pixeldEdx[SIZE];   //[TQ_n]
   Int_t           trk9_nUsedHitsdEdx[SIZE];   //[TQ_n]
   Int_t           trk9_nIBLOFsdEdx[SIZE];   //[TQ_n]
   Int_t           trk9_charge[SIZE];   //[TQ_n]
   Int_t           truth_n;
   Int_t           truth_pdgId[1];   //[truth_n]
   Int_t           truth_motherID[1];   //[truth_n]
   Double_t        truth_mass[1];   //[truth_n]
   Double_t        truth_pT[1];   //[truth_n]
   Double_t        truth_eta[1];   //[truth_n]
   Double_t        truth_phi[1];   //[truth_n]

   // List of branches
   TBranch        *b_run_number;   //!
   TBranch        *b_event_number;   //!
   TBranch        *b_lumi_block;   //!
   TBranch        *b_npv;   //!
   TBranch        *b_pv_z;   //!
   TBranch        *b_pv_sigma_z;   //!
   TBranch        *b_pv_type;   //!
   TBranch        *b_evt_wt;   //!
   TBranch        *b_pu_wt;   //!
   TBranch        *b_pu_wt_sys_up;   //!
   TBranch        *b_pu_wt_sys_dn;   //!
   TBranch        *b_corr_scaled_mu;   //!
   TBranch        *b_pass_grl;   //!
   TBranch        *b_err_pixel;   //!
   TBranch        *b_err_sct;   //!
   TBranch        *b_err_trt;   //!
   TBranch        *b_err_lar;   //!
   TBranch        *b_err_tile;   //!
   TBranch        *b_err_muon;   //!
   TBranch        *b_err_bitset;   //!
   TBranch        *b_L1_n;   //!
   TBranch        *b_L1_name;   //!
   TBranch        *b_L1_prescale;   //!
   TBranch        *b_HLT_n;   //!
   TBranch        *b_HLT_name;   //!
   TBranch        *b_HLT_prescale;   //!
   TBranch        *b_TQ_n;   //!
   TBranch        *b_TQ_channel;   //!
   TBranch        *b_TQ_PV_Ref_x;   //!
   TBranch        *b_TQ_PV_Ref_y;   //!
   TBranch        *b_TQ_PV_Ref_z;   //!
   TBranch        *b_TQ_PV_Ref_cov_xx;   //!
   TBranch        *b_TQ_PV_Ref_cov_yy;   //!
   TBranch        *b_TQ_PV_Ref_cov_zz;   //!
   TBranch        *b_TQ_PV_Ref_cov_xy;   //!
   TBranch        *b_TQ_PV_Ref_cov_yz;   //!
   TBranch        *b_TQ_PV_Ref_cov_zx;   //!
   TBranch        *b_TQ_PV_Ref_ptsum;   //!
   TBranch        *b_TQ_PV_idx;   //!
   TBranch        *b_TQ_VTX_mass;   //!
   TBranch        *b_TQ_VTX_massErr;   //!
   TBranch        *b_TQ_fitChi2;   //!
   TBranch        *b_TQ_fitNDF;   //!
   TBranch        *b_TQ_eta;   //!
   TBranch        *b_TQ_phi;   //!
   TBranch        *b_TQ_pT;   //!
   TBranch        *b_TQ_pT_error;   //!
   TBranch        *b_TQ_a0;   //!
   TBranch        *b_TQ_a0Err;   //!
   TBranch        *b_TQ_a0xy;   //!
   TBranch        *b_TQ_a0xyErr;   //!
   TBranch        *b_TQ_z0;   //!
   TBranch        *b_TQ_z0Err;   //!
   TBranch        *b_TQ_Lxy;   //!
   TBranch        *b_TQ_Lxy_err;   //!
   TBranch        *b_TQ_Lxy_sig;   //!
   TBranch        *b_JX_fitChi2;   //!
   TBranch        *b_JX_fitNDF;   //!
   TBranch        *b_JX_lxy;   //!
   TBranch        *b_JX_lxyErr;   //!
   TBranch        *b_JX_a0xy;   //!
   TBranch        *b_JX_a0xyErr;   //!
   TBranch        *b_JX_a0z;   //!
   TBranch        *b_JX_a0zErr;   //!
   TBranch        *b_JX_m;   //!
   TBranch        *b_JX_pT;   //!
   TBranch        *b_JX_eta;   //!
   TBranch        *b_JX_phi;   //!
   TBranch        *b_JX_RfMuon1_m;   //!
   TBranch        *b_JX_RfMuon1_pT;   //!
   TBranch        *b_JX_RfMuon1_eta;   //!
   TBranch        *b_JX_RfMuon1_phi;   //!
   TBranch        *b_JX_RfMuon2_m;   //!
   TBranch        *b_JX_RfMuon2_pT;   //!
   TBranch        *b_JX_RfMuon2_eta;   //!
   TBranch        *b_JX_RfMuon2_phi;   //!
   TBranch        *b_JX_RfTrack3_m;   //!
   TBranch        *b_JX_RfTrack3_pT;   //!
   TBranch        *b_JX_RfTrack3_eta;   //!
   TBranch        *b_JX_RfTrack3_phi;   //!
   TBranch        *b_JX_RfTrack4_m;   //!
   TBranch        *b_JX_RfTrack4_pT;   //!
   TBranch        *b_JX_RfTrack4_eta;   //!
   TBranch        *b_JX_RfTrack4_phi;   //!
   TBranch        *b_D_lxy;   //!
   TBranch        *b_D_lxyErr;   //!
   TBranch        *b_D_a0xy;   //!
   TBranch        *b_D_a0xyErr;   //!
   TBranch        *b_D_a0z;   //!
   TBranch        *b_D_a0zErr;   //!
   TBranch        *b_D_m;   //!
   TBranch        *b_D_pT;   //!
   TBranch        *b_D_eta;   //!
   TBranch        *b_D_phi;   //!
   TBranch        *b_D_RfTrack7_m;   //!
   TBranch        *b_D_RfTrack7_pT;   //!
   TBranch        *b_D_RfTrack7_eta;   //!
   TBranch        *b_D_RfTrack7_phi;   //!
   TBranch        *b_D_RfTrack8_m;   //!
   TBranch        *b_D_RfTrack8_pT;   //!
   TBranch        *b_D_RfTrack8_eta;   //!
   TBranch        *b_D_RfTrack8_phi;   //!
   TBranch        *b_D_RfTrack9_m;   //!
   TBranch        *b_D_RfTrack9_pT;   //!
   TBranch        *b_D_RfTrack9_eta;   //!
   TBranch        *b_D_RfTrack9_phi;   //!
   TBranch        *b_Ld_type;   //!
   TBranch        *b_Ld_fitChi2;   //!
   TBranch        *b_Ld_fitNDF;   //!
   TBranch        *b_Ld_lxy;   //!
   TBranch        *b_Ld_lxyErr;   //!
   TBranch        *b_Ld_a0xy;   //!
   TBranch        *b_Ld_a0xyErr;   //!
   TBranch        *b_Ld_a0z;   //!
   TBranch        *b_Ld_a0zErr;   //!
   TBranch        *b_Ld_gfit;   //!
   TBranch        *b_Ld_gmass;   //!
   TBranch        *b_Ld_gmasserr;   //!
   TBranch        *b_Ld_gchisq;   //!
   TBranch        *b_Ld_gndof;   //!
   TBranch        *b_Ld_gprob;   //!
   TBranch        *b_Ld_m;   //!
   TBranch        *b_Ld_pT;   //!
   TBranch        *b_Ld_eta;   //!
   TBranch        *b_Ld_phi;   //!
   TBranch        *b_Ld_RfTrack5_m;   //!
   TBranch        *b_Ld_RfTrack5_pT;   //!
   TBranch        *b_Ld_RfTrack5_eta;   //!
   TBranch        *b_Ld_RfTrack5_phi;   //!
   TBranch        *b_Ld_RfTrack6_m;   //!
   TBranch        *b_Ld_RfTrack6_pT;   //!
   TBranch        *b_Ld_RfTrack6_eta;   //!
   TBranch        *b_Ld_RfTrack6_phi;   //!
   TBranch        *b_Muon1_charge;   //!
   TBranch        *b_Muon1_e;   //!
   TBranch        *b_Muon1_pT;   //!
   TBranch        *b_Muon1_eta;   //!
   TBranch        *b_Muon1_phi;   //!
   TBranch        *b_Muon1_pz;   //!
   TBranch        *b_Muon1_d0;   //!
   TBranch        *b_Muon1_z0;   //!
   TBranch        *b_Muon1_trkComb_pT;   //!
   TBranch        *b_Muon1_trkMS_pT;   //!
   TBranch        *b_Muon1_trkMuonExtr_pT;   //!
   TBranch        *b_Muon1_matchChi2;   //!
   TBranch        *b_Muon1_matchChi2OverDoF;   //!
   TBranch        *b_Muon1_fitChi2;   //!
   TBranch        *b_Muon1_fitNdof;   //!
   TBranch        *b_Muon1_isTight;   //!
   TBranch        *b_Muon1_isMedium;   //!
   TBranch        *b_Muon1_isLoose;   //!
   TBranch        *b_Muon1_isVeryLoose;   //!
   TBranch        *b_Muon1_isHighPt;   //!
   TBranch        *b_Muon1_isLowPt;   //!
   TBranch        *b_Muon1_isCombinedMuon;   //!
   TBranch        *b_Muon1_isStandAloneMuon;   //!
   TBranch        *b_Muon1_isSegmentTagged;   //!
   TBranch        *b_Muon1_isCaloTagged;   //!
   TBranch        *b_Muon1_isSiliconAssociatedForward;   //!
   TBranch        *b_Muon1_innerSmallHits;   //!
   TBranch        *b_Muon1_InnerLargeHits;   //!
   TBranch        *b_Muon1_middleSmallHits;   //!
   TBranch        *b_Muon1_middleLargeHits;   //!
   TBranch        *b_Muon1_outerSmallHits;   //!
   TBranch        *b_Muon1_outerLargeHits;   //!
   TBranch        *b_Muon1_extendedSmallHits;   //!
   TBranch        *b_Muon1_extendedLargeHits;   //!
   TBranch        *b_Muon1_nprecisionHoleLayers;   //!
   TBranch        *b_Muon1_nprecisionLayers;   //!
   TBranch        *b_Muon1_ExpIBLayer;   //!
   TBranch        *b_Muon1_NIBLayer;   //!
   TBranch        *b_Muon1_ExpBLayer;   //!
   TBranch        *b_Muon1_NBLayer;   //!
   TBranch        *b_Muon1_nDeadPixels;   //!
   TBranch        *b_Muon1_nDeadSCT;   //!
   TBranch        *b_Muon1_nPIXHoles;   //!
   TBranch        *b_Muon1_nPIXhits;   //!
   TBranch        *b_Muon1_nSCTHoles;   //!
   TBranch        *b_Muon1_nSCThits;   //!
   TBranch        *b_Muon1_nTRThits;   //!
   TBranch        *b_Muon1_nTRToutliers;   //!
   TBranch        *b_Muon1_pixeldEdx;   //!
   TBranch        *b_Muon1_nUsedHitsdEdx;   //!
   TBranch        *b_Muon1_nIBLOFsdEdx;   //!
   TBranch        *b_Muon1_eLoss_fit;   //!
   TBranch        *b_Muon1_eLoss_par;   //!
   TBranch        *b_Muon1_eLoss_mes;   //!
   TBranch        *b_Muon1_momentumBalanceSignificance;   //!
   TBranch        *b_Muon1_scatteringCurvatureSignificance;   //!
   TBranch        *b_Muon1_scatteringNeighbourSignificance;   //!
   TBranch        *b_Muon1_medium_EFF_RECO_nominal;   //!
   TBranch        *b_Muon1_medium_EFF_RECO_STAT_down;   //!
   TBranch        *b_Muon1_medium_EFF_RECO_STAT_up;   //!
   TBranch        *b_Muon1_medium_EFF_RECO_STAT_LOWPT_down;   //!
   TBranch        *b_Muon1_medium_EFF_RECO_STAT_LOWPT_up;   //!
   TBranch        *b_Muon1_medium_EFF_RECO_SYS_down;   //!
   TBranch        *b_Muon1_medium_EFF_RECO_SYS_up;   //!
   TBranch        *b_Muon1_medium_EFF_RECO_SYS_LOWPT_down;   //!
   TBranch        *b_Muon1_medium_EFF_RECO_SYS_LOWPT_up;   //!
   TBranch        *b_Muon1_lowpt_EFF_RECO_nominal;   //!
   TBranch        *b_Muon1_lowpt_EFF_RECO_STAT_down;   //!
   TBranch        *b_Muon1_lowpt_EFF_RECO_STAT_up;   //!
   TBranch        *b_Muon1_lowpt_EFF_RECO_STAT_LOWPT_down;   //!
   TBranch        *b_Muon1_lowpt_EFF_RECO_STAT_LOWPT_up;   //!
   TBranch        *b_Muon1_lowpt_EFF_RECO_SYS_down;   //!
   TBranch        *b_Muon1_lowpt_EFF_RECO_SYS_up;   //!
   TBranch        *b_Muon1_lowpt_EFF_RECO_SYS_LOWPT_down;   //!
   TBranch        *b_Muon1_lowpt_EFF_RECO_SYS_LOWPT_up;   //!
   TBranch        *b_Muon1_loose_EFF_RECO_nominal;   //!
   TBranch        *b_Muon1_loose_EFF_RECO_STAT_down;   //!
   TBranch        *b_Muon1_loose_EFF_RECO_STAT_up;   //!
   TBranch        *b_Muon1_loose_EFF_RECO_STAT_LOWPT_down;   //!
   TBranch        *b_Muon1_loose_EFF_RECO_STAT_LOWPT_up;   //!
   TBranch        *b_Muon1_loose_EFF_RECO_SYS_down;   //!
   TBranch        *b_Muon1_loose_EFF_RECO_SYS_up;   //!
   TBranch        *b_Muon1_loose_EFF_RECO_SYS_LOWPT_down;   //!
   TBranch        *b_Muon1_loose_EFF_RECO_SYS_LOWPT_up;   //!
   TBranch        *b_Muon1_CB_down;   //!
   TBranch        *b_Muon1_CB_up;   //!
   TBranch        *b_Muon1_SCALE_down;   //!
   TBranch        *b_Muon1_SCALE_up;   //!
   TBranch        *b_Muon1_SAGITTA_DATASTAT_down;   //!
   TBranch        *b_Muon1_SAGITTA_DATASTAT_up;   //!
   TBranch        *b_Muon1_SAGITTA_GLOBAL_down;   //!
   TBranch        *b_Muon1_SAGITTA_GLOBAL_up;   //!
   TBranch        *b_Muon1_SAGITTA_PTEXTRA_down;   //!
   TBranch        *b_Muon1_SAGITTA_PTEXTRA_up;   //!
   TBranch        *b_Muon1_SAGITTA_RESBIAS_down;   //!
   TBranch        *b_Muon1_SAGITTA_RESBIAS_up;   //!
   TBranch        *b_Muon1_Nominal;   //!
   TBranch        *b_Muon2_charge;   //!
   TBranch        *b_Muon2_e;   //!
   TBranch        *b_Muon2_pT;   //!
   TBranch        *b_Muon2_eta;   //!
   TBranch        *b_Muon2_phi;   //!
   TBranch        *b_Muon2_pz;   //!
   TBranch        *b_Muon2_d0;   //!
   TBranch        *b_Muon2_z0;   //!
   TBranch        *b_Muon2_trkComb_pT;   //!
   TBranch        *b_Muon2_trkMS_pT;   //!
   TBranch        *b_Muon2_trkMuonExtr_pT;   //!
   TBranch        *b_Muon2_matchChi2;   //!
   TBranch        *b_Muon2_matchChi2OverDoF;   //!
   TBranch        *b_Muon2_fitChi2;   //!
   TBranch        *b_Muon2_fitNdof;   //!
   TBranch        *b_Muon2_isTight;   //!
   TBranch        *b_Muon2_isMedium;   //!
   TBranch        *b_Muon2_isLoose;   //!
   TBranch        *b_Muon2_isVeryLoose;   //!
   TBranch        *b_Muon2_isHighPt;   //!
   TBranch        *b_Muon2_isLowPt;   //!
   TBranch        *b_Muon2_isCombinedMuon;   //!
   TBranch        *b_Muon2_isStandAloneMuon;   //!
   TBranch        *b_Muon2_isSegmentTagged;   //!
   TBranch        *b_Muon2_isCaloTagged;   //!
   TBranch        *b_Muon2_isSiliconAssociatedForward;   //!
   TBranch        *b_Muon2_innerSmallHits;   //!
   TBranch        *b_Muon2_InnerLargeHits;   //!
   TBranch        *b_Muon2_middleSmallHits;   //!
   TBranch        *b_Muon2_middleLargeHits;   //!
   TBranch        *b_Muon2_outerSmallHits;   //!
   TBranch        *b_Muon2_outerLargeHits;   //!
   TBranch        *b_Muon2_extendedSmallHits;   //!
   TBranch        *b_Muon2_extendedLargeHits;   //!
   TBranch        *b_Muon2_nprecisionHoleLayers;   //!
   TBranch        *b_Muon2_nprecisionLayers;   //!
   TBranch        *b_Muon2_ExpIBLayer;   //!
   TBranch        *b_Muon2_NIBLayer;   //!
   TBranch        *b_Muon2_ExpBLayer;   //!
   TBranch        *b_Muon2_NBLayer;   //!
   TBranch        *b_Muon2_nDeadPixels;   //!
   TBranch        *b_Muon2_nDeadSCT;   //!
   TBranch        *b_Muon2_nPIXHoles;   //!
   TBranch        *b_Muon2_nPIXhits;   //!
   TBranch        *b_Muon2_nSCTHoles;   //!
   TBranch        *b_Muon2_nSCThits;   //!
   TBranch        *b_Muon2_nTRThits;   //!
   TBranch        *b_Muon2_nTRToutliers;   //!
   TBranch        *b_Muon2_pixeldEdx;   //!
   TBranch        *b_Muon2_nUsedHitsdEdx;   //!
   TBranch        *b_Muon2_nIBLOFsdEdx;   //!
   TBranch        *b_Muon2_eLoss_fit;   //!
   TBranch        *b_Muon2_eLoss_par;   //!
   TBranch        *b_Muon2_eLoss_mes;   //!
   TBranch        *b_Muon2_momentumBalanceSignificance;   //!
   TBranch        *b_Muon2_scatteringCurvatureSignificance;   //!
   TBranch        *b_Muon2_scatteringNeighbourSignificance;   //!
   TBranch        *b_Muon2_medium_EFF_RECO_nominal;   //!
   TBranch        *b_Muon2_medium_EFF_RECO_STAT_down;   //!
   TBranch        *b_Muon2_medium_EFF_RECO_STAT_up;   //!
   TBranch        *b_Muon2_medium_EFF_RECO_STAT_LOWPT_down;   //!
   TBranch        *b_Muon2_medium_EFF_RECO_STAT_LOWPT_up;   //!
   TBranch        *b_Muon2_medium_EFF_RECO_SYS_down;   //!
   TBranch        *b_Muon2_medium_EFF_RECO_SYS_up;   //!
   TBranch        *b_Muon2_medium_EFF_RECO_SYS_LOWPT_down;   //!
   TBranch        *b_Muon2_medium_EFF_RECO_SYS_LOWPT_up;   //!
   TBranch        *b_Muon2_lowpt_EFF_RECO_nominal;   //!
   TBranch        *b_Muon2_lowpt_EFF_RECO_STAT_down;   //!
   TBranch        *b_Muon2_lowpt_EFF_RECO_STAT_up;   //!
   TBranch        *b_Muon2_lowpt_EFF_RECO_STAT_LOWPT_down;   //!
   TBranch        *b_Muon2_lowpt_EFF_RECO_STAT_LOWPT_up;   //!
   TBranch        *b_Muon2_lowpt_EFF_RECO_SYS_down;   //!
   TBranch        *b_Muon2_lowpt_EFF_RECO_SYS_up;   //!
   TBranch        *b_Muon2_lowpt_EFF_RECO_SYS_LOWPT_down;   //!
   TBranch        *b_Muon2_lowpt_EFF_RECO_SYS_LOWPT_up;   //!
   TBranch        *b_Muon2_loose_EFF_RECO_nominal;   //!
   TBranch        *b_Muon2_loose_EFF_RECO_STAT_down;   //!
   TBranch        *b_Muon2_loose_EFF_RECO_STAT_up;   //!
   TBranch        *b_Muon2_loose_EFF_RECO_STAT_LOWPT_down;   //!
   TBranch        *b_Muon2_loose_EFF_RECO_STAT_LOWPT_up;   //!
   TBranch        *b_Muon2_loose_EFF_RECO_SYS_down;   //!
   TBranch        *b_Muon2_loose_EFF_RECO_SYS_up;   //!
   TBranch        *b_Muon2_loose_EFF_RECO_SYS_LOWPT_down;   //!
   TBranch        *b_Muon2_loose_EFF_RECO_SYS_LOWPT_up;   //!
   TBranch        *b_Muon2_CB_down;   //!
   TBranch        *b_Muon2_CB_up;   //!
   TBranch        *b_Muon2_SCALE_down;   //!
   TBranch        *b_Muon2_SCALE_up;   //!
   TBranch        *b_Muon2_SAGITTA_DATASTAT_down;   //!
   TBranch        *b_Muon2_SAGITTA_DATASTAT_up;   //!
   TBranch        *b_Muon2_SAGITTA_GLOBAL_down;   //!
   TBranch        *b_Muon2_SAGITTA_GLOBAL_up;   //!
   TBranch        *b_Muon2_SAGITTA_PTEXTRA_down;   //!
   TBranch        *b_Muon2_SAGITTA_PTEXTRA_up;   //!
   TBranch        *b_Muon2_SAGITTA_RESBIAS_down;   //!
   TBranch        *b_Muon2_SAGITTA_RESBIAS_up;   //!
   TBranch        *b_Muon2_Nominal;   //!
   TBranch        *b_trk3_pass;   //!
   TBranch        *b_trk3_pT;   //!
   TBranch        *b_trk3_eta;   //!
   TBranch        *b_trk3_phi;   //!
   TBranch        *b_trk3_d0;   //!
   TBranch        *b_trk3_d0_sig;   //!
   TBranch        *b_trk3_z0;   //!
   TBranch        *b_trk3_z0_sig;   //!
   TBranch        *b_trk3_vx;   //!
   TBranch        *b_trk3_vy;   //!
   TBranch        *b_trk3_vz;   //!
   TBranch        *b_trk3_qOverP;   //!
   TBranch        *b_trk3_passFilter;   //!
   TBranch        *b_trk3_d0_bias;   //!
   TBranch        *b_trk3_d0_sig_bias;   //!
   TBranch        *b_trk3_z0_bias;   //!
   TBranch        *b_trk3_z0_sig_bias;   //!
   TBranch        *b_trk3_qOverP_bias;   //!
   TBranch        *b_trk3_d0_smear;   //!
   TBranch        *b_trk3_d0_sig_smear;   //!
   TBranch        *b_trk3_z0_smear;   //!
   TBranch        *b_trk3_z0_sig_smear;   //!
   TBranch        *b_trk3_ExpIBLayer;   //!
   TBranch        *b_trk3_NIBLayer;   //!
   TBranch        *b_trk3_ExpBLayer;   //!
   TBranch        *b_trk3_NBLayer;   //!
   TBranch        *b_trk3_nDeadPixels;   //!
   TBranch        *b_trk3_nDeadSCT;   //!
   TBranch        *b_trk3_nPIXHoles;   //!
   TBranch        *b_trk3_nPIXhits;   //!
   TBranch        *b_trk3_nSCTHoles;   //!
   TBranch        *b_trk3_nSCThits;   //!
   TBranch        *b_trk3_nTRThits;   //!
   TBranch        *b_trk3_nTRToutliers;   //!
   TBranch        *b_trk3_pixeldEdx;   //!
   TBranch        *b_trk3_nUsedHitsdEdx;   //!
   TBranch        *b_trk3_nIBLOFsdEdx;   //!
   TBranch        *b_trk3_charge;   //!
   TBranch        *b_trk4_pass;   //!
   TBranch        *b_trk4_pT;   //!
   TBranch        *b_trk4_eta;   //!
   TBranch        *b_trk4_phi;   //!
   TBranch        *b_trk4_d0;   //!
   TBranch        *b_trk4_d0_sig;   //!
   TBranch        *b_trk4_z0;   //!
   TBranch        *b_trk4_z0_sig;   //!
   TBranch        *b_trk4_vx;   //!
   TBranch        *b_trk4_vy;   //!
   TBranch        *b_trk4_vz;   //!
   TBranch        *b_trk4_qOverP;   //!
   TBranch        *b_trk4_passFilter;   //!
   TBranch        *b_trk4_d0_bias;   //!
   TBranch        *b_trk4_d0_sig_bias;   //!
   TBranch        *b_trk4_z0_bias;   //!
   TBranch        *b_trk4_z0_sig_bias;   //!
   TBranch        *b_trk4_qOverP_bias;   //!
   TBranch        *b_trk4_d0_smear;   //!
   TBranch        *b_trk4_d0_sig_smear;   //!
   TBranch        *b_trk4_z0_smear;   //!
   TBranch        *b_trk4_z0_sig_smear;   //!
   TBranch        *b_trk4_ExpIBLayer;   //!
   TBranch        *b_trk4_NIBLayer;   //!
   TBranch        *b_trk4_ExpBLayer;   //!
   TBranch        *b_trk4_NBLayer;   //!
   TBranch        *b_trk4_nDeadPixels;   //!
   TBranch        *b_trk4_nDeadSCT;   //!
   TBranch        *b_trk4_nPIXHoles;   //!
   TBranch        *b_trk4_nPIXhits;   //!
   TBranch        *b_trk4_nSCTHoles;   //!
   TBranch        *b_trk4_nSCThits;   //!
   TBranch        *b_trk4_nTRThits;   //!
   TBranch        *b_trk4_nTRToutliers;   //!
   TBranch        *b_trk4_pixeldEdx;   //!
   TBranch        *b_trk4_nUsedHitsdEdx;   //!
   TBranch        *b_trk4_nIBLOFsdEdx;   //!
   TBranch        *b_trk4_charge;   //!
   TBranch        *b_trk5_pT;   //!
   TBranch        *b_trk5_eta;   //!
   TBranch        *b_trk5_phi;   //!
   TBranch        *b_trk5_d0;   //!
   TBranch        *b_trk5_d0_sig;   //!
   TBranch        *b_trk5_z0;   //!
   TBranch        *b_trk5_z0_sig;   //!
   TBranch        *b_trk5_vx;   //!
   TBranch        *b_trk5_vy;   //!
   TBranch        *b_trk5_vz;   //!
   TBranch        *b_trk5_qOverP;   //!
   TBranch        *b_trk5_passFilter;   //!
   TBranch        *b_trk5_ExpIBLayer;   //!
   TBranch        *b_trk5_NIBLayer;   //!
   TBranch        *b_trk5_ExpBLayer;   //!
   TBranch        *b_trk5_NBLayer;   //!
   TBranch        *b_trk5_nDeadPixels;   //!
   TBranch        *b_trk5_nDeadSCT;   //!
   TBranch        *b_trk5_nPIXHoles;   //!
   TBranch        *b_trk5_nPIXhits;   //!
   TBranch        *b_trk5_nSCTHoles;   //!
   TBranch        *b_trk5_nSCThits;   //!
   TBranch        *b_trk5_nTRThits;   //!
   TBranch        *b_trk5_nTRToutliers;   //!
   TBranch        *b_trk5_pixeldEdx;   //!
   TBranch        *b_trk5_nUsedHitsdEdx;   //!
   TBranch        *b_trk5_nIBLOFsdEdx;   //!
   TBranch        *b_trk5_charge;   //!
   TBranch        *b_trk6_pT;   //!
   TBranch        *b_trk6_eta;   //!
   TBranch        *b_trk6_phi;   //!
   TBranch        *b_trk6_d0;   //!
   TBranch        *b_trk6_d0_sig;   //!
   TBranch        *b_trk6_z0;   //!
   TBranch        *b_trk6_z0_sig;   //!
   TBranch        *b_trk6_vx;   //!
   TBranch        *b_trk6_vy;   //!
   TBranch        *b_trk6_vz;   //!
   TBranch        *b_trk6_qOverP;   //!
   TBranch        *b_trk6_passFilter;   //!
   TBranch        *b_trk6_ExpIBLayer;   //!
   TBranch        *b_trk6_NIBLayer;   //!
   TBranch        *b_trk6_ExpBLayer;   //!
   TBranch        *b_trk6_NBLayer;   //!
   TBranch        *b_trk6_nDeadPixels;   //!
   TBranch        *b_trk6_nDeadSCT;   //!
   TBranch        *b_trk6_nPIXHoles;   //!
   TBranch        *b_trk6_nPIXhits;   //!
   TBranch        *b_trk6_nSCTHoles;   //!
   TBranch        *b_trk6_nSCThits;   //!
   TBranch        *b_trk6_nTRThits;   //!
   TBranch        *b_trk6_nTRToutliers;   //!
   TBranch        *b_trk6_pixeldEdx;   //!
   TBranch        *b_trk6_nUsedHitsdEdx;   //!
   TBranch        *b_trk6_nIBLOFsdEdx;   //!
   TBranch        *b_trk6_charge;   //!
   TBranch        *b_trk7_pass;   //!
   TBranch        *b_trk7_pT;   //!
   TBranch        *b_trk7_eta;   //!
   TBranch        *b_trk7_phi;   //!
   TBranch        *b_trk7_d0;   //!
   TBranch        *b_trk7_d0_sig;   //!
   TBranch        *b_trk7_z0;   //!
   TBranch        *b_trk7_z0_sig;   //!
   TBranch        *b_trk7_vx;   //!
   TBranch        *b_trk7_vy;   //!
   TBranch        *b_trk7_vz;   //!
   TBranch        *b_trk7_qOverP;   //!
   TBranch        *b_trk7_passFilter;   //!
   TBranch        *b_trk7_d0_bias;   //!
   TBranch        *b_trk7_d0_sig_bias;   //!
   TBranch        *b_trk7_z0_bias;   //!
   TBranch        *b_trk7_z0_sig_bias;   //!
   TBranch        *b_trk7_qOverP_bias;   //!
   TBranch        *b_trk7_d0_smear;   //!
   TBranch        *b_trk7_d0_sig_smear;   //!
   TBranch        *b_trk7_z0_smear;   //!
   TBranch        *b_trk7_z0_sig_smear;   //!
   TBranch        *b_trk7_ExpIBLayer;   //!
   TBranch        *b_trk7_NIBLayer;   //!
   TBranch        *b_trk7_ExpBLayer;   //!
   TBranch        *b_trk7_NBLayer;   //!
   TBranch        *b_trk7_nDeadPixels;   //!
   TBranch        *b_trk7_nDeadSCT;   //!
   TBranch        *b_trk7_nPIXHoles;   //!
   TBranch        *b_trk7_nPIXhits;   //!
   TBranch        *b_trk7_nSCTHoles;   //!
   TBranch        *b_trk7_nSCThits;   //!
   TBranch        *b_trk7_nTRThits;   //!
   TBranch        *b_trk7_nTRToutliers;   //!
   TBranch        *b_trk7_pixeldEdx;   //!
   TBranch        *b_trk7_nUsedHitsdEdx;   //!
   TBranch        *b_trk7_nIBLOFsdEdx;   //!
   TBranch        *b_trk7_charge;   //!
   TBranch        *b_trk8_pass;   //!
   TBranch        *b_trk8_pT;   //!
   TBranch        *b_trk8_eta;   //!
   TBranch        *b_trk8_phi;   //!
   TBranch        *b_trk8_d0;   //!
   TBranch        *b_trk8_d0_sig;   //!
   TBranch        *b_trk8_z0;   //!
   TBranch        *b_trk8_z0_sig;   //!
   TBranch        *b_trk8_vx;   //!
   TBranch        *b_trk8_vy;   //!
   TBranch        *b_trk8_vz;   //!
   TBranch        *b_trk8_qOverP;   //!
   TBranch        *b_trk8_passFilter;   //!
   TBranch        *b_trk8_d0_bias;   //!
   TBranch        *b_trk8_d0_sig_bias;   //!
   TBranch        *b_trk8_z0_bias;   //!
   TBranch        *b_trk8_z0_sig_bias;   //!
   TBranch        *b_trk8_qOverP_bias;   //!
   TBranch        *b_trk8_d0_smear;   //!
   TBranch        *b_trk8_d0_sig_smear;   //!
   TBranch        *b_trk8_z0_smear;   //!
   TBranch        *b_trk8_z0_sig_smear;   //!
   TBranch        *b_trk8_ExpIBLayer;   //!
   TBranch        *b_trk8_NIBLayer;   //!
   TBranch        *b_trk8_ExpBLayer;   //!
   TBranch        *b_trk8_NBLayer;   //!
   TBranch        *b_trk8_nDeadPixels;   //!
   TBranch        *b_trk8_nDeadSCT;   //!
   TBranch        *b_trk8_nPIXHoles;   //!
   TBranch        *b_trk8_nPIXhits;   //!
   TBranch        *b_trk8_nSCTHoles;   //!
   TBranch        *b_trk8_nSCThits;   //!
   TBranch        *b_trk8_nTRThits;   //!
   TBranch        *b_trk8_nTRToutliers;   //!
   TBranch        *b_trk8_pixeldEdx;   //!
   TBranch        *b_trk8_nUsedHitsdEdx;   //!
   TBranch        *b_trk8_nIBLOFsdEdx;   //!
   TBranch        *b_trk8_charge;   //!
   TBranch        *b_trk9_pass;   //!
   TBranch        *b_trk9_pT;   //!
   TBranch        *b_trk9_eta;   //!
   TBranch        *b_trk9_phi;   //!
   TBranch        *b_trk9_d0;   //!
   TBranch        *b_trk9_d0_sig;   //!
   TBranch        *b_trk9_z0;   //!
   TBranch        *b_trk9_z0_sig;   //!
   TBranch        *b_trk9_vx;   //!
   TBranch        *b_trk9_vy;   //!
   TBranch        *b_trk9_vz;   //!
   TBranch        *b_trk9_qOverP;   //!
   TBranch        *b_trk9_passFilter;   //!
   TBranch        *b_trk9_d0_bias;   //!
   TBranch        *b_trk9_d0_sig_bias;   //!
   TBranch        *b_trk9_z0_bias;   //!
   TBranch        *b_trk9_z0_sig_bias;   //!
   TBranch        *b_trk9_qOverP_bias;   //!
   TBranch        *b_trk9_d0_smear;   //!
   TBranch        *b_trk9_d0_sig_smear;   //!
   TBranch        *b_trk9_z0_smear;   //!
   TBranch        *b_trk9_z0_sig_smear;   //!
   TBranch        *b_trk9_ExpIBLayer;   //!
   TBranch        *b_trk9_NIBLayer;   //!
   TBranch        *b_trk9_ExpBLayer;   //!
   TBranch        *b_trk9_NBLayer;   //!
   TBranch        *b_trk9_nDeadPixels;   //!
   TBranch        *b_trk9_nDeadSCT;   //!
   TBranch        *b_trk9_nPIXHoles;   //!
   TBranch        *b_trk9_nPIXhits;   //!
   TBranch        *b_trk9_nSCTHoles;   //!
   TBranch        *b_trk9_nSCThits;   //!
   TBranch        *b_trk9_nTRThits;   //!
   TBranch        *b_trk9_nTRToutliers;   //!
   TBranch        *b_trk9_pixeldEdx;   //!
   TBranch        *b_trk9_nUsedHitsdEdx;   //!
   TBranch        *b_trk9_nIBLOFsdEdx;   //!
   TBranch        *b_trk9_charge;   //!
   TBranch        *b_truth_n;   //!
   TBranch        *b_truth_pdgId;   //!
   TBranch        *b_truth_motherID;   //!
   TBranch        *b_truth_mass;   //!
   TBranch        *b_truth_pT;   //!
   TBranch        *b_truth_eta;   //!
   TBranch        *b_truth_phi;   //!

   header(std::string inputfiles);
   ~header();
   virtual Int_t    Cut(Long64_t entry);
   virtual Int_t    GetEntry(Long64_t entry);
   virtual Long64_t    GetEntries();
   virtual Long64_t LoadTree(Long64_t entry);
   virtual void     Init();
   virtual void     Loop();
   virtual bool     Notify();
   virtual void     Show(Long64_t entry = -1);
};


header::header(std::string inputfiles) 
{
   TChain *chain = new TChain("BPHY25","");
   chain->Add(inputfiles.c_str());
   fChain = chain;
}

header::~header()
{
   if (!fChain) return;
   delete fChain->GetCurrentFile();
}

Int_t header::GetEntry(Long64_t entry)
{
// Read contents of entry.
   if (!fChain) return 0;
   return fChain->GetEntry(entry);
}

Long64_t header::GetEntries(){
   if (!fChain) return 0;
   return fChain->GetEntries();
}

Long64_t header::LoadTree(Long64_t entry)
{
// Set the environment to read one entry
   if (!fChain) return -5;
   Long64_t centry = fChain->LoadTree(entry);
   if (centry < 0) return centry;
   if (fChain->GetTreeNumber() != fCurrent) {
      fCurrent = fChain->GetTreeNumber();
      Notify();
   }
   return centry;
}

void header::Init()
{
   // The Init() function is called when the selector needs to initialize
   // a new tree or chain. Typically here the branch addresses and branch
   // pointers of the tree will be set.
   // It is normally not necessary to make changes to the generated
   // code, but the routine can be extended by the user if needed.
   // Init() will be called many times when running on PROOF
   // (once per file to be processed).

   // Set object pointer
   pv_z = 0;
   pv_sigma_z = 0;
   pv_type = 0;
   L1_name = 0;
   HLT_name = 0;
   fCurrent = -1;
   fChain->SetMakeClass(1);

   fChain->SetBranchAddress("run_number", &run_number, &b_run_number);
   fChain->SetBranchAddress("event_number", &event_number, &b_event_number);
   fChain->SetBranchAddress("lumi_block", &lumi_block, &b_lumi_block);
   fChain->SetBranchAddress("npv", &npv, &b_npv);
   fChain->SetBranchAddress("pv_z", &pv_z, &b_pv_z);
   fChain->SetBranchAddress("pv_sigma_z", &pv_sigma_z, &b_pv_sigma_z);
   fChain->SetBranchAddress("pv_type", &pv_type, &b_pv_type);
   fChain->SetBranchAddress("evt_wt", &evt_wt, &b_evt_wt);
   fChain->SetBranchAddress("pu_wt", &pu_wt, &b_pu_wt);
   fChain->SetBranchAddress("pu_wt_sys_up", &pu_wt_sys_up, &b_pu_wt_sys_up);
   fChain->SetBranchAddress("pu_wt_sys_dn", &pu_wt_sys_dn, &b_pu_wt_sys_dn);
   fChain->SetBranchAddress("corr_scaled_mu", &corr_scaled_mu, &b_corr_scaled_mu);
   fChain->SetBranchAddress("pass_grl", &pass_grl, &b_pass_grl);
   fChain->SetBranchAddress("err_pixel", &err_pixel, &b_err_pixel);
   fChain->SetBranchAddress("err_sct", &err_sct, &b_err_sct);
   fChain->SetBranchAddress("err_trt", &err_trt, &b_err_trt);
   fChain->SetBranchAddress("err_lar", &err_lar, &b_err_lar);
   fChain->SetBranchAddress("err_tile", &err_tile, &b_err_tile);
   fChain->SetBranchAddress("err_muon", &err_muon, &b_err_muon);
   fChain->SetBranchAddress("err_bitset", &err_bitset, &b_err_bitset);
   fChain->SetBranchAddress("L1_n", &L1_n, &b_L1_n);
   fChain->SetBranchAddress("L1_name", &L1_name, &b_L1_name);
   fChain->SetBranchAddress("L1_prescale", L1_prescale, &b_L1_prescale);
   fChain->SetBranchAddress("HLT_n", &HLT_n, &b_HLT_n);
   fChain->SetBranchAddress("HLT_name", &HLT_name, &b_HLT_name);
   fChain->SetBranchAddress("HLT_prescale", HLT_prescale, &b_HLT_prescale);
   fChain->SetBranchAddress("TQ_n", &TQ_n, &b_TQ_n);
   fChain->SetBranchAddress("TQ_channel", TQ_channel, &b_TQ_channel);
   fChain->SetBranchAddress("TQ_PV_Ref_x", TQ_PV_Ref_x, &b_TQ_PV_Ref_x);
   fChain->SetBranchAddress("TQ_PV_Ref_y", TQ_PV_Ref_y, &b_TQ_PV_Ref_y);
   fChain->SetBranchAddress("TQ_PV_Ref_z", TQ_PV_Ref_z, &b_TQ_PV_Ref_z);
   fChain->SetBranchAddress("TQ_PV_Ref_cov_xx", TQ_PV_Ref_cov_xx, &b_TQ_PV_Ref_cov_xx);
   fChain->SetBranchAddress("TQ_PV_Ref_cov_yy", TQ_PV_Ref_cov_yy, &b_TQ_PV_Ref_cov_yy);
   fChain->SetBranchAddress("TQ_PV_Ref_cov_zz", TQ_PV_Ref_cov_zz, &b_TQ_PV_Ref_cov_zz);
   fChain->SetBranchAddress("TQ_PV_Ref_cov_xy", TQ_PV_Ref_cov_xy, &b_TQ_PV_Ref_cov_xy);
   fChain->SetBranchAddress("TQ_PV_Ref_cov_yz", TQ_PV_Ref_cov_yz, &b_TQ_PV_Ref_cov_yz);
   fChain->SetBranchAddress("TQ_PV_Ref_cov_zx", TQ_PV_Ref_cov_zx, &b_TQ_PV_Ref_cov_zx);
   fChain->SetBranchAddress("TQ_PV_Ref_ptsum", TQ_PV_Ref_ptsum, &b_TQ_PV_Ref_ptsum);
   fChain->SetBranchAddress("TQ_PV_idx", TQ_PV_idx, &b_TQ_PV_idx);
   fChain->SetBranchAddress("TQ_VTX_mass", TQ_VTX_mass, &b_TQ_VTX_mass);
   fChain->SetBranchAddress("TQ_VTX_massErr", TQ_VTX_massErr, &b_TQ_VTX_massErr);
   fChain->SetBranchAddress("TQ_fitChi2", TQ_fitChi2, &b_TQ_fitChi2);
   fChain->SetBranchAddress("TQ_fitNDF", TQ_fitNDF, &b_TQ_fitNDF);
   fChain->SetBranchAddress("TQ_eta", TQ_eta, &b_TQ_eta);
   fChain->SetBranchAddress("TQ_phi", TQ_phi, &b_TQ_phi);
   fChain->SetBranchAddress("TQ_pT", TQ_pT, &b_TQ_pT);
   fChain->SetBranchAddress("TQ_pT_error", TQ_pT_error, &b_TQ_pT_error);
   fChain->SetBranchAddress("TQ_a0", TQ_a0, &b_TQ_a0);
   fChain->SetBranchAddress("TQ_a0Err", TQ_a0Err, &b_TQ_a0Err);
   fChain->SetBranchAddress("TQ_a0xy", TQ_a0xy, &b_TQ_a0xy);
   fChain->SetBranchAddress("TQ_a0xyErr", TQ_a0xyErr, &b_TQ_a0xyErr);
   fChain->SetBranchAddress("TQ_z0", TQ_z0, &b_TQ_z0);
   fChain->SetBranchAddress("TQ_z0Err", TQ_z0Err, &b_TQ_z0Err);
   fChain->SetBranchAddress("TQ_Lxy", TQ_Lxy, &b_TQ_Lxy);
   fChain->SetBranchAddress("TQ_Lxy_err", TQ_Lxy_err, &b_TQ_Lxy_err);
   fChain->SetBranchAddress("TQ_Lxy_sig", TQ_Lxy_sig, &b_TQ_Lxy_sig);
   fChain->SetBranchAddress("JX_fitChi2", JX_fitChi2, &b_JX_fitChi2);
   fChain->SetBranchAddress("JX_fitNDF", JX_fitNDF, &b_JX_fitNDF);
   fChain->SetBranchAddress("JX_lxy", JX_lxy, &b_JX_lxy);
   fChain->SetBranchAddress("JX_lxyErr", JX_lxyErr, &b_JX_lxyErr);
   fChain->SetBranchAddress("JX_a0xy", JX_a0xy, &b_JX_a0xy);
   fChain->SetBranchAddress("JX_a0xyErr", JX_a0xyErr, &b_JX_a0xyErr);
   fChain->SetBranchAddress("JX_a0z", JX_a0z, &b_JX_a0z);
   fChain->SetBranchAddress("JX_a0zErr", JX_a0zErr, &b_JX_a0zErr);
   fChain->SetBranchAddress("JX_m", JX_m, &b_JX_m);
   fChain->SetBranchAddress("JX_pT", JX_pT, &b_JX_pT);
   fChain->SetBranchAddress("JX_eta", JX_eta, &b_JX_eta);
   fChain->SetBranchAddress("JX_phi", JX_phi, &b_JX_phi);
   fChain->SetBranchAddress("JX_RfMuon1_m", JX_RfMuon1_m, &b_JX_RfMuon1_m);
   fChain->SetBranchAddress("JX_RfMuon1_pT", JX_RfMuon1_pT, &b_JX_RfMuon1_pT);
   fChain->SetBranchAddress("JX_RfMuon1_eta", JX_RfMuon1_eta, &b_JX_RfMuon1_eta);
   fChain->SetBranchAddress("JX_RfMuon1_phi", JX_RfMuon1_phi, &b_JX_RfMuon1_phi);
   fChain->SetBranchAddress("JX_RfMuon2_m", JX_RfMuon2_m, &b_JX_RfMuon2_m);
   fChain->SetBranchAddress("JX_RfMuon2_pT", JX_RfMuon2_pT, &b_JX_RfMuon2_pT);
   fChain->SetBranchAddress("JX_RfMuon2_eta", JX_RfMuon2_eta, &b_JX_RfMuon2_eta);
   fChain->SetBranchAddress("JX_RfMuon2_phi", JX_RfMuon2_phi, &b_JX_RfMuon2_phi);
   fChain->SetBranchAddress("JX_RfTrack3_m", JX_RfTrack3_m, &b_JX_RfTrack3_m);
   fChain->SetBranchAddress("JX_RfTrack3_pT", JX_RfTrack3_pT, &b_JX_RfTrack3_pT);
   fChain->SetBranchAddress("JX_RfTrack3_eta", JX_RfTrack3_eta, &b_JX_RfTrack3_eta);
   fChain->SetBranchAddress("JX_RfTrack3_phi", JX_RfTrack3_phi, &b_JX_RfTrack3_phi);
   fChain->SetBranchAddress("JX_RfTrack4_m", JX_RfTrack4_m, &b_JX_RfTrack4_m);
   fChain->SetBranchAddress("JX_RfTrack4_pT", JX_RfTrack4_pT, &b_JX_RfTrack4_pT);
   fChain->SetBranchAddress("JX_RfTrack4_eta", JX_RfTrack4_eta, &b_JX_RfTrack4_eta);
   fChain->SetBranchAddress("JX_RfTrack4_phi", JX_RfTrack4_phi, &b_JX_RfTrack4_phi);
   fChain->SetBranchAddress("D_lxy", D_lxy, &b_D_lxy);
   fChain->SetBranchAddress("D_lxyErr", D_lxyErr, &b_D_lxyErr);
   fChain->SetBranchAddress("D_a0xy", D_a0xy, &b_D_a0xy);
   fChain->SetBranchAddress("D_a0xyErr", D_a0xyErr, &b_D_a0xyErr);
   fChain->SetBranchAddress("D_a0z", D_a0z, &b_D_a0z);
   fChain->SetBranchAddress("D_a0zErr", D_a0zErr, &b_D_a0zErr);
   fChain->SetBranchAddress("D_m", D_m, &b_D_m);
   fChain->SetBranchAddress("D_pT", D_pT, &b_D_pT);
   fChain->SetBranchAddress("D_eta", D_eta, &b_D_eta);
   fChain->SetBranchAddress("D_phi", D_phi, &b_D_phi);
   fChain->SetBranchAddress("D_RfTrack7_m", D_RfTrack7_m, &b_D_RfTrack7_m);
   fChain->SetBranchAddress("D_RfTrack7_pT", D_RfTrack7_pT, &b_D_RfTrack7_pT);
   fChain->SetBranchAddress("D_RfTrack7_eta", D_RfTrack7_eta, &b_D_RfTrack7_eta);
   fChain->SetBranchAddress("D_RfTrack7_phi", D_RfTrack7_phi, &b_D_RfTrack7_phi);
   fChain->SetBranchAddress("D_RfTrack8_m", D_RfTrack8_m, &b_D_RfTrack8_m);
   fChain->SetBranchAddress("D_RfTrack8_pT", D_RfTrack8_pT, &b_D_RfTrack8_pT);
   fChain->SetBranchAddress("D_RfTrack8_eta", D_RfTrack8_eta, &b_D_RfTrack8_eta);
   fChain->SetBranchAddress("D_RfTrack8_phi", D_RfTrack8_phi, &b_D_RfTrack8_phi);
   fChain->SetBranchAddress("D_RfTrack9_m", D_RfTrack9_m, &b_D_RfTrack9_m);
   fChain->SetBranchAddress("D_RfTrack9_pT", D_RfTrack9_pT, &b_D_RfTrack9_pT);
   fChain->SetBranchAddress("D_RfTrack9_eta", D_RfTrack9_eta, &b_D_RfTrack9_eta);
   fChain->SetBranchAddress("D_RfTrack9_phi", D_RfTrack9_phi, &b_D_RfTrack9_phi);
   fChain->SetBranchAddress("Ld_type", Ld_type, &b_Ld_type);
   fChain->SetBranchAddress("Ld_fitChi2", Ld_fitChi2, &b_Ld_fitChi2);
   fChain->SetBranchAddress("Ld_fitNDF", Ld_fitNDF, &b_Ld_fitNDF);
   fChain->SetBranchAddress("Ld_lxy", Ld_lxy, &b_Ld_lxy);
   fChain->SetBranchAddress("Ld_lxyErr", Ld_lxyErr, &b_Ld_lxyErr);
   fChain->SetBranchAddress("Ld_a0xy", Ld_a0xy, &b_Ld_a0xy);
   fChain->SetBranchAddress("Ld_a0xyErr", Ld_a0xyErr, &b_Ld_a0xyErr);
   fChain->SetBranchAddress("Ld_a0z", Ld_a0z, &b_Ld_a0z);
   fChain->SetBranchAddress("Ld_a0zErr", Ld_a0zErr, &b_Ld_a0zErr);
   fChain->SetBranchAddress("Ld_gfit", Ld_gfit, &b_Ld_gfit);
   fChain->SetBranchAddress("Ld_gmass", Ld_gmass, &b_Ld_gmass);
   fChain->SetBranchAddress("Ld_gmasserr", Ld_gmasserr, &b_Ld_gmasserr);
   fChain->SetBranchAddress("Ld_gchisq", Ld_gchisq, &b_Ld_gchisq);
   fChain->SetBranchAddress("Ld_gndof", Ld_gndof, &b_Ld_gndof);
   fChain->SetBranchAddress("Ld_gprob", Ld_gprob, &b_Ld_gprob);
   fChain->SetBranchAddress("Ld_m", Ld_m, &b_Ld_m);
   fChain->SetBranchAddress("Ld_pT", Ld_pT, &b_Ld_pT);
   fChain->SetBranchAddress("Ld_eta", Ld_eta, &b_Ld_eta);
   fChain->SetBranchAddress("Ld_phi", Ld_phi, &b_Ld_phi);
   fChain->SetBranchAddress("Ld_RfTrack5_m", Ld_RfTrack5_m, &b_Ld_RfTrack5_m);
   fChain->SetBranchAddress("Ld_RfTrack5_pT", Ld_RfTrack5_pT, &b_Ld_RfTrack5_pT);
   fChain->SetBranchAddress("Ld_RfTrack5_eta", Ld_RfTrack5_eta, &b_Ld_RfTrack5_eta);
   fChain->SetBranchAddress("Ld_RfTrack5_phi", Ld_RfTrack5_phi, &b_Ld_RfTrack5_phi);
   fChain->SetBranchAddress("Ld_RfTrack6_m", Ld_RfTrack6_m, &b_Ld_RfTrack6_m);
   fChain->SetBranchAddress("Ld_RfTrack6_pT", Ld_RfTrack6_pT, &b_Ld_RfTrack6_pT);
   fChain->SetBranchAddress("Ld_RfTrack6_eta", Ld_RfTrack6_eta, &b_Ld_RfTrack6_eta);
   fChain->SetBranchAddress("Ld_RfTrack6_phi", Ld_RfTrack6_phi, &b_Ld_RfTrack6_phi);
   fChain->SetBranchAddress("Muon1_charge", Muon1_charge, &b_Muon1_charge);
   fChain->SetBranchAddress("Muon1_e", Muon1_e, &b_Muon1_e);
   fChain->SetBranchAddress("Muon1_pT", Muon1_pT, &b_Muon1_pT);
   fChain->SetBranchAddress("Muon1_eta", Muon1_eta, &b_Muon1_eta);
   fChain->SetBranchAddress("Muon1_phi", Muon1_phi, &b_Muon1_phi);
   fChain->SetBranchAddress("Muon1_pz", Muon1_pz, &b_Muon1_pz);
   fChain->SetBranchAddress("Muon1_d0", Muon1_d0, &b_Muon1_d0);
   fChain->SetBranchAddress("Muon1_z0", Muon1_z0, &b_Muon1_z0);
   fChain->SetBranchAddress("Muon1_trkComb_pT", Muon1_trkComb_pT, &b_Muon1_trkComb_pT);
   fChain->SetBranchAddress("Muon1_trkMS_pT", Muon1_trkMS_pT, &b_Muon1_trkMS_pT);
   fChain->SetBranchAddress("Muon1_trkMuonExtr_pT", Muon1_trkMuonExtr_pT, &b_Muon1_trkMuonExtr_pT);
   fChain->SetBranchAddress("Muon1_matchChi2", Muon1_matchChi2, &b_Muon1_matchChi2);
   fChain->SetBranchAddress("Muon1_matchChi2OverDoF", Muon1_matchChi2OverDoF, &b_Muon1_matchChi2OverDoF);
   fChain->SetBranchAddress("Muon1_fitChi2", Muon1_fitChi2, &b_Muon1_fitChi2);
   fChain->SetBranchAddress("Muon1_fitNdof", Muon1_fitNdof, &b_Muon1_fitNdof);
   fChain->SetBranchAddress("Muon1_isTight", Muon1_isTight, &b_Muon1_isTight);
   fChain->SetBranchAddress("Muon1_isMedium", Muon1_isMedium, &b_Muon1_isMedium);
   fChain->SetBranchAddress("Muon1_isLoose", Muon1_isLoose, &b_Muon1_isLoose);
   fChain->SetBranchAddress("Muon1_isVeryLoose", Muon1_isVeryLoose, &b_Muon1_isVeryLoose);
   fChain->SetBranchAddress("Muon1_isHighPt", Muon1_isHighPt, &b_Muon1_isHighPt);
   fChain->SetBranchAddress("Muon1_isLowPt", Muon1_isLowPt, &b_Muon1_isLowPt);
   fChain->SetBranchAddress("Muon1_isCombinedMuon", Muon1_isCombinedMuon, &b_Muon1_isCombinedMuon);
   fChain->SetBranchAddress("Muon1_isStandAloneMuon", Muon1_isStandAloneMuon, &b_Muon1_isStandAloneMuon);
   fChain->SetBranchAddress("Muon1_isSegmentTagged", Muon1_isSegmentTagged, &b_Muon1_isSegmentTagged);
   fChain->SetBranchAddress("Muon1_isCaloTagged", Muon1_isCaloTagged, &b_Muon1_isCaloTagged);
   fChain->SetBranchAddress("Muon1_isSiliconAssociatedForward", Muon1_isSiliconAssociatedForward, &b_Muon1_isSiliconAssociatedForward);
   fChain->SetBranchAddress("Muon1_innerSmallHits", Muon1_innerSmallHits, &b_Muon1_innerSmallHits);
   fChain->SetBranchAddress("Muon1_InnerLargeHits", Muon1_InnerLargeHits, &b_Muon1_InnerLargeHits);
   fChain->SetBranchAddress("Muon1_middleSmallHits", Muon1_middleSmallHits, &b_Muon1_middleSmallHits);
   fChain->SetBranchAddress("Muon1_middleLargeHits", Muon1_middleLargeHits, &b_Muon1_middleLargeHits);
   fChain->SetBranchAddress("Muon1_outerSmallHits", Muon1_outerSmallHits, &b_Muon1_outerSmallHits);
   fChain->SetBranchAddress("Muon1_outerLargeHits", Muon1_outerLargeHits, &b_Muon1_outerLargeHits);
   fChain->SetBranchAddress("Muon1_extendedSmallHits", Muon1_extendedSmallHits, &b_Muon1_extendedSmallHits);
   fChain->SetBranchAddress("Muon1_extendedLargeHits", Muon1_extendedLargeHits, &b_Muon1_extendedLargeHits);
   fChain->SetBranchAddress("Muon1_nprecisionHoleLayers", Muon1_nprecisionHoleLayers, &b_Muon1_nprecisionHoleLayers);
   fChain->SetBranchAddress("Muon1_nprecisionLayers", Muon1_nprecisionLayers, &b_Muon1_nprecisionLayers);
   fChain->SetBranchAddress("Muon1_ExpIBLayer", Muon1_ExpIBLayer, &b_Muon1_ExpIBLayer);
   fChain->SetBranchAddress("Muon1_NIBLayer", Muon1_NIBLayer, &b_Muon1_NIBLayer);
   fChain->SetBranchAddress("Muon1_ExpBLayer", Muon1_ExpBLayer, &b_Muon1_ExpBLayer);
   fChain->SetBranchAddress("Muon1_NBLayer", Muon1_NBLayer, &b_Muon1_NBLayer);
   fChain->SetBranchAddress("Muon1_nDeadPixels", Muon1_nDeadPixels, &b_Muon1_nDeadPixels);
   fChain->SetBranchAddress("Muon1_nDeadSCT", Muon1_nDeadSCT, &b_Muon1_nDeadSCT);
   fChain->SetBranchAddress("Muon1_nPIXHoles", Muon1_nPIXHoles, &b_Muon1_nPIXHoles);
   fChain->SetBranchAddress("Muon1_nPIXhits", Muon1_nPIXhits, &b_Muon1_nPIXhits);
   fChain->SetBranchAddress("Muon1_nSCTHoles", Muon1_nSCTHoles, &b_Muon1_nSCTHoles);
   fChain->SetBranchAddress("Muon1_nSCThits", Muon1_nSCThits, &b_Muon1_nSCThits);
   fChain->SetBranchAddress("Muon1_nTRThits", Muon1_nTRThits, &b_Muon1_nTRThits);
   fChain->SetBranchAddress("Muon1_nTRToutliers", Muon1_nTRToutliers, &b_Muon1_nTRToutliers);
   fChain->SetBranchAddress("Muon1_pixeldEdx", Muon1_pixeldEdx, &b_Muon1_pixeldEdx);
   fChain->SetBranchAddress("Muon1_nUsedHitsdEdx", Muon1_nUsedHitsdEdx, &b_Muon1_nUsedHitsdEdx);
   fChain->SetBranchAddress("Muon1_nIBLOFsdEdx", Muon1_nIBLOFsdEdx, &b_Muon1_nIBLOFsdEdx);
   fChain->SetBranchAddress("Muon1_eLoss_fit", Muon1_eLoss_fit, &b_Muon1_eLoss_fit);
   fChain->SetBranchAddress("Muon1_eLoss_par", Muon1_eLoss_par, &b_Muon1_eLoss_par);
   fChain->SetBranchAddress("Muon1_eLoss_mes", Muon1_eLoss_mes, &b_Muon1_eLoss_mes);
   fChain->SetBranchAddress("Muon1_momentumBalanceSignificance", Muon1_momentumBalanceSignificance, &b_Muon1_momentumBalanceSignificance);
   fChain->SetBranchAddress("Muon1_scatteringCurvatureSignificance", Muon1_scatteringCurvatureSignificance, &b_Muon1_scatteringCurvatureSignificance);
   fChain->SetBranchAddress("Muon1_scatteringNeighbourSignificance", Muon1_scatteringNeighbourSignificance, &b_Muon1_scatteringNeighbourSignificance);
   fChain->SetBranchAddress("Muon1_medium_EFF_RECO_nominal", Muon1_medium_EFF_RECO_nominal, &b_Muon1_medium_EFF_RECO_nominal);
   fChain->SetBranchAddress("Muon1_medium_EFF_RECO_STAT_down", Muon1_medium_EFF_RECO_STAT_down, &b_Muon1_medium_EFF_RECO_STAT_down);
   fChain->SetBranchAddress("Muon1_medium_EFF_RECO_STAT_up", Muon1_medium_EFF_RECO_STAT_up, &b_Muon1_medium_EFF_RECO_STAT_up);
   fChain->SetBranchAddress("Muon1_medium_EFF_RECO_STAT_LOWPT_down", Muon1_medium_EFF_RECO_STAT_LOWPT_down, &b_Muon1_medium_EFF_RECO_STAT_LOWPT_down);
   fChain->SetBranchAddress("Muon1_medium_EFF_RECO_STAT_LOWPT_up", Muon1_medium_EFF_RECO_STAT_LOWPT_up, &b_Muon1_medium_EFF_RECO_STAT_LOWPT_up);
   fChain->SetBranchAddress("Muon1_medium_EFF_RECO_SYS_down", Muon1_medium_EFF_RECO_SYS_down, &b_Muon1_medium_EFF_RECO_SYS_down);
   fChain->SetBranchAddress("Muon1_medium_EFF_RECO_SYS_up", Muon1_medium_EFF_RECO_SYS_up, &b_Muon1_medium_EFF_RECO_SYS_up);
   fChain->SetBranchAddress("Muon1_medium_EFF_RECO_SYS_LOWPT_down", Muon1_medium_EFF_RECO_SYS_LOWPT_down, &b_Muon1_medium_EFF_RECO_SYS_LOWPT_down);
   fChain->SetBranchAddress("Muon1_medium_EFF_RECO_SYS_LOWPT_up", Muon1_medium_EFF_RECO_SYS_LOWPT_up, &b_Muon1_medium_EFF_RECO_SYS_LOWPT_up);
   fChain->SetBranchAddress("Muon1_lowpt_EFF_RECO_nominal", Muon1_lowpt_EFF_RECO_nominal, &b_Muon1_lowpt_EFF_RECO_nominal);
   fChain->SetBranchAddress("Muon1_lowpt_EFF_RECO_STAT_down", Muon1_lowpt_EFF_RECO_STAT_down, &b_Muon1_lowpt_EFF_RECO_STAT_down);
   fChain->SetBranchAddress("Muon1_lowpt_EFF_RECO_STAT_up", Muon1_lowpt_EFF_RECO_STAT_up, &b_Muon1_lowpt_EFF_RECO_STAT_up);
   fChain->SetBranchAddress("Muon1_lowpt_EFF_RECO_STAT_LOWPT_down", Muon1_lowpt_EFF_RECO_STAT_LOWPT_down, &b_Muon1_lowpt_EFF_RECO_STAT_LOWPT_down);
   fChain->SetBranchAddress("Muon1_lowpt_EFF_RECO_STAT_LOWPT_up", Muon1_lowpt_EFF_RECO_STAT_LOWPT_up, &b_Muon1_lowpt_EFF_RECO_STAT_LOWPT_up);
   fChain->SetBranchAddress("Muon1_lowpt_EFF_RECO_SYS_down", Muon1_lowpt_EFF_RECO_SYS_down, &b_Muon1_lowpt_EFF_RECO_SYS_down);
   fChain->SetBranchAddress("Muon1_lowpt_EFF_RECO_SYS_up", Muon1_lowpt_EFF_RECO_SYS_up, &b_Muon1_lowpt_EFF_RECO_SYS_up);
   fChain->SetBranchAddress("Muon1_lowpt_EFF_RECO_SYS_LOWPT_down", Muon1_lowpt_EFF_RECO_SYS_LOWPT_down, &b_Muon1_lowpt_EFF_RECO_SYS_LOWPT_down);
   fChain->SetBranchAddress("Muon1_lowpt_EFF_RECO_SYS_LOWPT_up", Muon1_lowpt_EFF_RECO_SYS_LOWPT_up, &b_Muon1_lowpt_EFF_RECO_SYS_LOWPT_up);
   fChain->SetBranchAddress("Muon1_loose_EFF_RECO_nominal", Muon1_loose_EFF_RECO_nominal, &b_Muon1_loose_EFF_RECO_nominal);
   fChain->SetBranchAddress("Muon1_loose_EFF_RECO_STAT_down", Muon1_loose_EFF_RECO_STAT_down, &b_Muon1_loose_EFF_RECO_STAT_down);
   fChain->SetBranchAddress("Muon1_loose_EFF_RECO_STAT_up", Muon1_loose_EFF_RECO_STAT_up, &b_Muon1_loose_EFF_RECO_STAT_up);
   fChain->SetBranchAddress("Muon1_loose_EFF_RECO_STAT_LOWPT_down", Muon1_loose_EFF_RECO_STAT_LOWPT_down, &b_Muon1_loose_EFF_RECO_STAT_LOWPT_down);
   fChain->SetBranchAddress("Muon1_loose_EFF_RECO_STAT_LOWPT_up", Muon1_loose_EFF_RECO_STAT_LOWPT_up, &b_Muon1_loose_EFF_RECO_STAT_LOWPT_up);
   fChain->SetBranchAddress("Muon1_loose_EFF_RECO_SYS_down", Muon1_loose_EFF_RECO_SYS_down, &b_Muon1_loose_EFF_RECO_SYS_down);
   fChain->SetBranchAddress("Muon1_loose_EFF_RECO_SYS_up", Muon1_loose_EFF_RECO_SYS_up, &b_Muon1_loose_EFF_RECO_SYS_up);
   fChain->SetBranchAddress("Muon1_loose_EFF_RECO_SYS_LOWPT_down", Muon1_loose_EFF_RECO_SYS_LOWPT_down, &b_Muon1_loose_EFF_RECO_SYS_LOWPT_down);
   fChain->SetBranchAddress("Muon1_loose_EFF_RECO_SYS_LOWPT_up", Muon1_loose_EFF_RECO_SYS_LOWPT_up, &b_Muon1_loose_EFF_RECO_SYS_LOWPT_up);
   fChain->SetBranchAddress("Muon1_CB_down", Muon1_CB_down, &b_Muon1_CB_down);
   fChain->SetBranchAddress("Muon1_CB_up", Muon1_CB_up, &b_Muon1_CB_up);
   fChain->SetBranchAddress("Muon1_SCALE_down", Muon1_SCALE_down, &b_Muon1_SCALE_down);
   fChain->SetBranchAddress("Muon1_SCALE_up", Muon1_SCALE_up, &b_Muon1_SCALE_up);
   fChain->SetBranchAddress("Muon1_SAGITTA_DATASTAT_down", Muon1_SAGITTA_DATASTAT_down, &b_Muon1_SAGITTA_DATASTAT_down);
   fChain->SetBranchAddress("Muon1_SAGITTA_DATASTAT_up", Muon1_SAGITTA_DATASTAT_up, &b_Muon1_SAGITTA_DATASTAT_up);
   fChain->SetBranchAddress("Muon1_SAGITTA_GLOBAL_down", Muon1_SAGITTA_GLOBAL_down, &b_Muon1_SAGITTA_GLOBAL_down);
   fChain->SetBranchAddress("Muon1_SAGITTA_GLOBAL_up", Muon1_SAGITTA_GLOBAL_up, &b_Muon1_SAGITTA_GLOBAL_up);
   fChain->SetBranchAddress("Muon1_SAGITTA_PTEXTRA_down", Muon1_SAGITTA_PTEXTRA_down, &b_Muon1_SAGITTA_PTEXTRA_down);
   fChain->SetBranchAddress("Muon1_SAGITTA_PTEXTRA_up", Muon1_SAGITTA_PTEXTRA_up, &b_Muon1_SAGITTA_PTEXTRA_up);
   fChain->SetBranchAddress("Muon1_SAGITTA_RESBIAS_down", Muon1_SAGITTA_RESBIAS_down, &b_Muon1_SAGITTA_RESBIAS_down);
   fChain->SetBranchAddress("Muon1_SAGITTA_RESBIAS_up", Muon1_SAGITTA_RESBIAS_up, &b_Muon1_SAGITTA_RESBIAS_up);
   fChain->SetBranchAddress("Muon1_Nominal", Muon1_Nominal, &b_Muon1_Nominal);
   fChain->SetBranchAddress("Muon2_charge", Muon2_charge, &b_Muon2_charge);
   fChain->SetBranchAddress("Muon2_e", Muon2_e, &b_Muon2_e);
   fChain->SetBranchAddress("Muon2_pT", Muon2_pT, &b_Muon2_pT);
   fChain->SetBranchAddress("Muon2_eta", Muon2_eta, &b_Muon2_eta);
   fChain->SetBranchAddress("Muon2_phi", Muon2_phi, &b_Muon2_phi);
   fChain->SetBranchAddress("Muon2_pz", Muon2_pz, &b_Muon2_pz);
   fChain->SetBranchAddress("Muon2_d0", Muon2_d0, &b_Muon2_d0);
   fChain->SetBranchAddress("Muon2_z0", Muon2_z0, &b_Muon2_z0);
   fChain->SetBranchAddress("Muon2_trkComb_pT", Muon2_trkComb_pT, &b_Muon2_trkComb_pT);
   fChain->SetBranchAddress("Muon2_trkMS_pT", Muon2_trkMS_pT, &b_Muon2_trkMS_pT);
   fChain->SetBranchAddress("Muon2_trkMuonExtr_pT", Muon2_trkMuonExtr_pT, &b_Muon2_trkMuonExtr_pT);
   fChain->SetBranchAddress("Muon2_matchChi2", Muon2_matchChi2, &b_Muon2_matchChi2);
   fChain->SetBranchAddress("Muon2_matchChi2OverDoF", Muon2_matchChi2OverDoF, &b_Muon2_matchChi2OverDoF);
   fChain->SetBranchAddress("Muon2_fitChi2", Muon2_fitChi2, &b_Muon2_fitChi2);
   fChain->SetBranchAddress("Muon2_fitNdof", Muon2_fitNdof, &b_Muon2_fitNdof);
   fChain->SetBranchAddress("Muon2_isTight", Muon2_isTight, &b_Muon2_isTight);
   fChain->SetBranchAddress("Muon2_isMedium", Muon2_isMedium, &b_Muon2_isMedium);
   fChain->SetBranchAddress("Muon2_isLoose", Muon2_isLoose, &b_Muon2_isLoose);
   fChain->SetBranchAddress("Muon2_isVeryLoose", Muon2_isVeryLoose, &b_Muon2_isVeryLoose);
   fChain->SetBranchAddress("Muon2_isHighPt", Muon2_isHighPt, &b_Muon2_isHighPt);
   fChain->SetBranchAddress("Muon2_isLowPt", Muon2_isLowPt, &b_Muon2_isLowPt);
   fChain->SetBranchAddress("Muon2_isCombinedMuon", Muon2_isCombinedMuon, &b_Muon2_isCombinedMuon);
   fChain->SetBranchAddress("Muon2_isStandAloneMuon", Muon2_isStandAloneMuon, &b_Muon2_isStandAloneMuon);
   fChain->SetBranchAddress("Muon2_isSegmentTagged", Muon2_isSegmentTagged, &b_Muon2_isSegmentTagged);
   fChain->SetBranchAddress("Muon2_isCaloTagged", Muon2_isCaloTagged, &b_Muon2_isCaloTagged);
   fChain->SetBranchAddress("Muon2_isSiliconAssociatedForward", Muon2_isSiliconAssociatedForward, &b_Muon2_isSiliconAssociatedForward);
   fChain->SetBranchAddress("Muon2_innerSmallHits", Muon2_innerSmallHits, &b_Muon2_innerSmallHits);
   fChain->SetBranchAddress("Muon2_InnerLargeHits", Muon2_InnerLargeHits, &b_Muon2_InnerLargeHits);
   fChain->SetBranchAddress("Muon2_middleSmallHits", Muon2_middleSmallHits, &b_Muon2_middleSmallHits);
   fChain->SetBranchAddress("Muon2_middleLargeHits", Muon2_middleLargeHits, &b_Muon2_middleLargeHits);
   fChain->SetBranchAddress("Muon2_outerSmallHits", Muon2_outerSmallHits, &b_Muon2_outerSmallHits);
   fChain->SetBranchAddress("Muon2_outerLargeHits", Muon2_outerLargeHits, &b_Muon2_outerLargeHits);
   fChain->SetBranchAddress("Muon2_extendedSmallHits", Muon2_extendedSmallHits, &b_Muon2_extendedSmallHits);
   fChain->SetBranchAddress("Muon2_extendedLargeHits", Muon2_extendedLargeHits, &b_Muon2_extendedLargeHits);
   fChain->SetBranchAddress("Muon2_nprecisionHoleLayers", Muon2_nprecisionHoleLayers, &b_Muon2_nprecisionHoleLayers);
   fChain->SetBranchAddress("Muon2_nprecisionLayers", Muon2_nprecisionLayers, &b_Muon2_nprecisionLayers);
   fChain->SetBranchAddress("Muon2_ExpIBLayer", Muon2_ExpIBLayer, &b_Muon2_ExpIBLayer);
   fChain->SetBranchAddress("Muon2_NIBLayer", Muon2_NIBLayer, &b_Muon2_NIBLayer);
   fChain->SetBranchAddress("Muon2_ExpBLayer", Muon2_ExpBLayer, &b_Muon2_ExpBLayer);
   fChain->SetBranchAddress("Muon2_NBLayer", Muon2_NBLayer, &b_Muon2_NBLayer);
   fChain->SetBranchAddress("Muon2_nDeadPixels", Muon2_nDeadPixels, &b_Muon2_nDeadPixels);
   fChain->SetBranchAddress("Muon2_nDeadSCT", Muon2_nDeadSCT, &b_Muon2_nDeadSCT);
   fChain->SetBranchAddress("Muon2_nPIXHoles", Muon2_nPIXHoles, &b_Muon2_nPIXHoles);
   fChain->SetBranchAddress("Muon2_nPIXhits", Muon2_nPIXhits, &b_Muon2_nPIXhits);
   fChain->SetBranchAddress("Muon2_nSCTHoles", Muon2_nSCTHoles, &b_Muon2_nSCTHoles);
   fChain->SetBranchAddress("Muon2_nSCThits", Muon2_nSCThits, &b_Muon2_nSCThits);
   fChain->SetBranchAddress("Muon2_nTRThits", Muon2_nTRThits, &b_Muon2_nTRThits);
   fChain->SetBranchAddress("Muon2_nTRToutliers", Muon2_nTRToutliers, &b_Muon2_nTRToutliers);
   fChain->SetBranchAddress("Muon2_pixeldEdx", Muon2_pixeldEdx, &b_Muon2_pixeldEdx);
   fChain->SetBranchAddress("Muon2_nUsedHitsdEdx", Muon2_nUsedHitsdEdx, &b_Muon2_nUsedHitsdEdx);
   fChain->SetBranchAddress("Muon2_nIBLOFsdEdx", Muon2_nIBLOFsdEdx, &b_Muon2_nIBLOFsdEdx);
   fChain->SetBranchAddress("Muon2_eLoss_fit", Muon2_eLoss_fit, &b_Muon2_eLoss_fit);
   fChain->SetBranchAddress("Muon2_eLoss_par", Muon2_eLoss_par, &b_Muon2_eLoss_par);
   fChain->SetBranchAddress("Muon2_eLoss_mes", Muon2_eLoss_mes, &b_Muon2_eLoss_mes);
   fChain->SetBranchAddress("Muon2_momentumBalanceSignificance", Muon2_momentumBalanceSignificance, &b_Muon2_momentumBalanceSignificance);
   fChain->SetBranchAddress("Muon2_scatteringCurvatureSignificance", Muon2_scatteringCurvatureSignificance, &b_Muon2_scatteringCurvatureSignificance);
   fChain->SetBranchAddress("Muon2_scatteringNeighbourSignificance", Muon2_scatteringNeighbourSignificance, &b_Muon2_scatteringNeighbourSignificance);
   fChain->SetBranchAddress("Muon2_medium_EFF_RECO_nominal", Muon2_medium_EFF_RECO_nominal, &b_Muon2_medium_EFF_RECO_nominal);
   fChain->SetBranchAddress("Muon2_medium_EFF_RECO_STAT_down", Muon2_medium_EFF_RECO_STAT_down, &b_Muon2_medium_EFF_RECO_STAT_down);
   fChain->SetBranchAddress("Muon2_medium_EFF_RECO_STAT_up", Muon2_medium_EFF_RECO_STAT_up, &b_Muon2_medium_EFF_RECO_STAT_up);
   fChain->SetBranchAddress("Muon2_medium_EFF_RECO_STAT_LOWPT_down", Muon2_medium_EFF_RECO_STAT_LOWPT_down, &b_Muon2_medium_EFF_RECO_STAT_LOWPT_down);
   fChain->SetBranchAddress("Muon2_medium_EFF_RECO_STAT_LOWPT_up", Muon2_medium_EFF_RECO_STAT_LOWPT_up, &b_Muon2_medium_EFF_RECO_STAT_LOWPT_up);
   fChain->SetBranchAddress("Muon2_medium_EFF_RECO_SYS_down", Muon2_medium_EFF_RECO_SYS_down, &b_Muon2_medium_EFF_RECO_SYS_down);
   fChain->SetBranchAddress("Muon2_medium_EFF_RECO_SYS_up", Muon2_medium_EFF_RECO_SYS_up, &b_Muon2_medium_EFF_RECO_SYS_up);
   fChain->SetBranchAddress("Muon2_medium_EFF_RECO_SYS_LOWPT_down", Muon2_medium_EFF_RECO_SYS_LOWPT_down, &b_Muon2_medium_EFF_RECO_SYS_LOWPT_down);
   fChain->SetBranchAddress("Muon2_medium_EFF_RECO_SYS_LOWPT_up", Muon2_medium_EFF_RECO_SYS_LOWPT_up, &b_Muon2_medium_EFF_RECO_SYS_LOWPT_up);
   fChain->SetBranchAddress("Muon2_lowpt_EFF_RECO_nominal", Muon2_lowpt_EFF_RECO_nominal, &b_Muon2_lowpt_EFF_RECO_nominal);
   fChain->SetBranchAddress("Muon2_lowpt_EFF_RECO_STAT_down", Muon2_lowpt_EFF_RECO_STAT_down, &b_Muon2_lowpt_EFF_RECO_STAT_down);
   fChain->SetBranchAddress("Muon2_lowpt_EFF_RECO_STAT_up", Muon2_lowpt_EFF_RECO_STAT_up, &b_Muon2_lowpt_EFF_RECO_STAT_up);
   fChain->SetBranchAddress("Muon2_lowpt_EFF_RECO_STAT_LOWPT_down", Muon2_lowpt_EFF_RECO_STAT_LOWPT_down, &b_Muon2_lowpt_EFF_RECO_STAT_LOWPT_down);
   fChain->SetBranchAddress("Muon2_lowpt_EFF_RECO_STAT_LOWPT_up", Muon2_lowpt_EFF_RECO_STAT_LOWPT_up, &b_Muon2_lowpt_EFF_RECO_STAT_LOWPT_up);
   fChain->SetBranchAddress("Muon2_lowpt_EFF_RECO_SYS_down", Muon2_lowpt_EFF_RECO_SYS_down, &b_Muon2_lowpt_EFF_RECO_SYS_down);
   fChain->SetBranchAddress("Muon2_lowpt_EFF_RECO_SYS_up", Muon2_lowpt_EFF_RECO_SYS_up, &b_Muon2_lowpt_EFF_RECO_SYS_up);
   fChain->SetBranchAddress("Muon2_lowpt_EFF_RECO_SYS_LOWPT_down", Muon2_lowpt_EFF_RECO_SYS_LOWPT_down, &b_Muon2_lowpt_EFF_RECO_SYS_LOWPT_down);
   fChain->SetBranchAddress("Muon2_lowpt_EFF_RECO_SYS_LOWPT_up", Muon2_lowpt_EFF_RECO_SYS_LOWPT_up, &b_Muon2_lowpt_EFF_RECO_SYS_LOWPT_up);
   fChain->SetBranchAddress("Muon2_loose_EFF_RECO_nominal", Muon2_loose_EFF_RECO_nominal, &b_Muon2_loose_EFF_RECO_nominal);
   fChain->SetBranchAddress("Muon2_loose_EFF_RECO_STAT_down", Muon2_loose_EFF_RECO_STAT_down, &b_Muon2_loose_EFF_RECO_STAT_down);
   fChain->SetBranchAddress("Muon2_loose_EFF_RECO_STAT_up", Muon2_loose_EFF_RECO_STAT_up, &b_Muon2_loose_EFF_RECO_STAT_up);
   fChain->SetBranchAddress("Muon2_loose_EFF_RECO_STAT_LOWPT_down", Muon2_loose_EFF_RECO_STAT_LOWPT_down, &b_Muon2_loose_EFF_RECO_STAT_LOWPT_down);
   fChain->SetBranchAddress("Muon2_loose_EFF_RECO_STAT_LOWPT_up", Muon2_loose_EFF_RECO_STAT_LOWPT_up, &b_Muon2_loose_EFF_RECO_STAT_LOWPT_up);
   fChain->SetBranchAddress("Muon2_loose_EFF_RECO_SYS_down", Muon2_loose_EFF_RECO_SYS_down, &b_Muon2_loose_EFF_RECO_SYS_down);
   fChain->SetBranchAddress("Muon2_loose_EFF_RECO_SYS_up", Muon2_loose_EFF_RECO_SYS_up, &b_Muon2_loose_EFF_RECO_SYS_up);
   fChain->SetBranchAddress("Muon2_loose_EFF_RECO_SYS_LOWPT_down", Muon2_loose_EFF_RECO_SYS_LOWPT_down, &b_Muon2_loose_EFF_RECO_SYS_LOWPT_down);
   fChain->SetBranchAddress("Muon2_loose_EFF_RECO_SYS_LOWPT_up", Muon2_loose_EFF_RECO_SYS_LOWPT_up, &b_Muon2_loose_EFF_RECO_SYS_LOWPT_up);
   fChain->SetBranchAddress("Muon2_CB_down", Muon2_CB_down, &b_Muon2_CB_down);
   fChain->SetBranchAddress("Muon2_CB_up", Muon2_CB_up, &b_Muon2_CB_up);
   fChain->SetBranchAddress("Muon2_SCALE_down", Muon2_SCALE_down, &b_Muon2_SCALE_down);
   fChain->SetBranchAddress("Muon2_SCALE_up", Muon2_SCALE_up, &b_Muon2_SCALE_up);
   fChain->SetBranchAddress("Muon2_SAGITTA_DATASTAT_down", Muon2_SAGITTA_DATASTAT_down, &b_Muon2_SAGITTA_DATASTAT_down);
   fChain->SetBranchAddress("Muon2_SAGITTA_DATASTAT_up", Muon2_SAGITTA_DATASTAT_up, &b_Muon2_SAGITTA_DATASTAT_up);
   fChain->SetBranchAddress("Muon2_SAGITTA_GLOBAL_down", Muon2_SAGITTA_GLOBAL_down, &b_Muon2_SAGITTA_GLOBAL_down);
   fChain->SetBranchAddress("Muon2_SAGITTA_GLOBAL_up", Muon2_SAGITTA_GLOBAL_up, &b_Muon2_SAGITTA_GLOBAL_up);
   fChain->SetBranchAddress("Muon2_SAGITTA_PTEXTRA_down", Muon2_SAGITTA_PTEXTRA_down, &b_Muon2_SAGITTA_PTEXTRA_down);
   fChain->SetBranchAddress("Muon2_SAGITTA_PTEXTRA_up", Muon2_SAGITTA_PTEXTRA_up, &b_Muon2_SAGITTA_PTEXTRA_up);
   fChain->SetBranchAddress("Muon2_SAGITTA_RESBIAS_down", Muon2_SAGITTA_RESBIAS_down, &b_Muon2_SAGITTA_RESBIAS_down);
   fChain->SetBranchAddress("Muon2_SAGITTA_RESBIAS_up", Muon2_SAGITTA_RESBIAS_up, &b_Muon2_SAGITTA_RESBIAS_up);
   fChain->SetBranchAddress("Muon2_Nominal", Muon2_Nominal, &b_Muon2_Nominal);
   fChain->SetBranchAddress("trk3_pass", trk3_pass, &b_trk3_pass);
   fChain->SetBranchAddress("trk3_pT", trk3_pT, &b_trk3_pT);
   fChain->SetBranchAddress("trk3_eta", trk3_eta, &b_trk3_eta);
   fChain->SetBranchAddress("trk3_phi", trk3_phi, &b_trk3_phi);
   fChain->SetBranchAddress("trk3_d0", trk3_d0, &b_trk3_d0);
   fChain->SetBranchAddress("trk3_d0_sig", trk3_d0_sig, &b_trk3_d0_sig);
   fChain->SetBranchAddress("trk3_z0", trk3_z0, &b_trk3_z0);
   fChain->SetBranchAddress("trk3_z0_sig", trk3_z0_sig, &b_trk3_z0_sig);
   fChain->SetBranchAddress("trk3_vx", trk3_vx, &b_trk3_vx);
   fChain->SetBranchAddress("trk3_vy", trk3_vy, &b_trk3_vy);
   fChain->SetBranchAddress("trk3_vz", trk3_vz, &b_trk3_vz);
   fChain->SetBranchAddress("trk3_qOverP", trk3_qOverP, &b_trk3_qOverP);
   fChain->SetBranchAddress("trk3_passFilter", trk3_passFilter, &b_trk3_passFilter);
   fChain->SetBranchAddress("trk3_d0_bias", trk3_d0_bias, &b_trk3_d0_bias);
   fChain->SetBranchAddress("trk3_d0_sig_bias", trk3_d0_sig_bias, &b_trk3_d0_sig_bias);
   fChain->SetBranchAddress("trk3_z0_bias", trk3_z0_bias, &b_trk3_z0_bias);
   fChain->SetBranchAddress("trk3_z0_sig_bias", trk3_z0_sig_bias, &b_trk3_z0_sig_bias);
   fChain->SetBranchAddress("trk3_qOverP_bias", trk3_qOverP_bias, &b_trk3_qOverP_bias);
   fChain->SetBranchAddress("trk3_d0_smear", trk3_d0_smear, &b_trk3_d0_smear);
   fChain->SetBranchAddress("trk3_d0_sig_smear", trk3_d0_sig_smear, &b_trk3_d0_sig_smear);
   fChain->SetBranchAddress("trk3_z0_smear", trk3_z0_smear, &b_trk3_z0_smear);
   fChain->SetBranchAddress("trk3_z0_sig_smear", trk3_z0_sig_smear, &b_trk3_z0_sig_smear);
   fChain->SetBranchAddress("trk3_ExpIBLayer", trk3_ExpIBLayer, &b_trk3_ExpIBLayer);
   fChain->SetBranchAddress("trk3_NIBLayer", trk3_NIBLayer, &b_trk3_NIBLayer);
   fChain->SetBranchAddress("trk3_ExpBLayer", trk3_ExpBLayer, &b_trk3_ExpBLayer);
   fChain->SetBranchAddress("trk3_NBLayer", trk3_NBLayer, &b_trk3_NBLayer);
   fChain->SetBranchAddress("trk3_nDeadPixels", trk3_nDeadPixels, &b_trk3_nDeadPixels);
   fChain->SetBranchAddress("trk3_nDeadSCT", trk3_nDeadSCT, &b_trk3_nDeadSCT);
   fChain->SetBranchAddress("trk3_nPIXHoles", trk3_nPIXHoles, &b_trk3_nPIXHoles);
   fChain->SetBranchAddress("trk3_nPIXhits", trk3_nPIXhits, &b_trk3_nPIXhits);
   fChain->SetBranchAddress("trk3_nSCTHoles", trk3_nSCTHoles, &b_trk3_nSCTHoles);
   fChain->SetBranchAddress("trk3_nSCThits", trk3_nSCThits, &b_trk3_nSCThits);
   fChain->SetBranchAddress("trk3_nTRThits", trk3_nTRThits, &b_trk3_nTRThits);
   fChain->SetBranchAddress("trk3_nTRToutliers", trk3_nTRToutliers, &b_trk3_nTRToutliers);
   fChain->SetBranchAddress("trk3_pixeldEdx", trk3_pixeldEdx, &b_trk3_pixeldEdx);
   fChain->SetBranchAddress("trk3_nUsedHitsdEdx", trk3_nUsedHitsdEdx, &b_trk3_nUsedHitsdEdx);
   fChain->SetBranchAddress("trk3_nIBLOFsdEdx", trk3_nIBLOFsdEdx, &b_trk3_nIBLOFsdEdx);
   fChain->SetBranchAddress("trk3_charge", trk3_charge, &b_trk3_charge);
   fChain->SetBranchAddress("trk4_pass", trk4_pass, &b_trk4_pass);
   fChain->SetBranchAddress("trk4_pT", trk4_pT, &b_trk4_pT);
   fChain->SetBranchAddress("trk4_eta", trk4_eta, &b_trk4_eta);
   fChain->SetBranchAddress("trk4_phi", trk4_phi, &b_trk4_phi);
   fChain->SetBranchAddress("trk4_d0", trk4_d0, &b_trk4_d0);
   fChain->SetBranchAddress("trk4_d0_sig", trk4_d0_sig, &b_trk4_d0_sig);
   fChain->SetBranchAddress("trk4_z0", trk4_z0, &b_trk4_z0);
   fChain->SetBranchAddress("trk4_z0_sig", trk4_z0_sig, &b_trk4_z0_sig);
   fChain->SetBranchAddress("trk4_vx", trk4_vx, &b_trk4_vx);
   fChain->SetBranchAddress("trk4_vy", trk4_vy, &b_trk4_vy);
   fChain->SetBranchAddress("trk4_vz", trk4_vz, &b_trk4_vz);
   fChain->SetBranchAddress("trk4_qOverP", trk4_qOverP, &b_trk4_qOverP);
   fChain->SetBranchAddress("trk4_passFilter", trk4_passFilter, &b_trk4_passFilter);
   fChain->SetBranchAddress("trk4_d0_bias", trk4_d0_bias, &b_trk4_d0_bias);
   fChain->SetBranchAddress("trk4_d0_sig_bias", trk4_d0_sig_bias, &b_trk4_d0_sig_bias);
   fChain->SetBranchAddress("trk4_z0_bias", trk4_z0_bias, &b_trk4_z0_bias);
   fChain->SetBranchAddress("trk4_z0_sig_bias", trk4_z0_sig_bias, &b_trk4_z0_sig_bias);
   fChain->SetBranchAddress("trk4_qOverP_bias", trk4_qOverP_bias, &b_trk4_qOverP_bias);
   fChain->SetBranchAddress("trk4_d0_smear", trk4_d0_smear, &b_trk4_d0_smear);
   fChain->SetBranchAddress("trk4_d0_sig_smear", trk4_d0_sig_smear, &b_trk4_d0_sig_smear);
   fChain->SetBranchAddress("trk4_z0_smear", trk4_z0_smear, &b_trk4_z0_smear);
   fChain->SetBranchAddress("trk4_z0_sig_smear", trk4_z0_sig_smear, &b_trk4_z0_sig_smear);
   fChain->SetBranchAddress("trk4_ExpIBLayer", trk4_ExpIBLayer, &b_trk4_ExpIBLayer);
   fChain->SetBranchAddress("trk4_NIBLayer", trk4_NIBLayer, &b_trk4_NIBLayer);
   fChain->SetBranchAddress("trk4_ExpBLayer", trk4_ExpBLayer, &b_trk4_ExpBLayer);
   fChain->SetBranchAddress("trk4_NBLayer", trk4_NBLayer, &b_trk4_NBLayer);
   fChain->SetBranchAddress("trk4_nDeadPixels", trk4_nDeadPixels, &b_trk4_nDeadPixels);
   fChain->SetBranchAddress("trk4_nDeadSCT", trk4_nDeadSCT, &b_trk4_nDeadSCT);
   fChain->SetBranchAddress("trk4_nPIXHoles", trk4_nPIXHoles, &b_trk4_nPIXHoles);
   fChain->SetBranchAddress("trk4_nPIXhits", trk4_nPIXhits, &b_trk4_nPIXhits);
   fChain->SetBranchAddress("trk4_nSCTHoles", trk4_nSCTHoles, &b_trk4_nSCTHoles);
   fChain->SetBranchAddress("trk4_nSCThits", trk4_nSCThits, &b_trk4_nSCThits);
   fChain->SetBranchAddress("trk4_nTRThits", trk4_nTRThits, &b_trk4_nTRThits);
   fChain->SetBranchAddress("trk4_nTRToutliers", trk4_nTRToutliers, &b_trk4_nTRToutliers);
   fChain->SetBranchAddress("trk4_pixeldEdx", trk4_pixeldEdx, &b_trk4_pixeldEdx);
   fChain->SetBranchAddress("trk4_nUsedHitsdEdx", trk4_nUsedHitsdEdx, &b_trk4_nUsedHitsdEdx);
   fChain->SetBranchAddress("trk4_nIBLOFsdEdx", trk4_nIBLOFsdEdx, &b_trk4_nIBLOFsdEdx);
   fChain->SetBranchAddress("trk4_charge", trk4_charge, &b_trk4_charge);
   fChain->SetBranchAddress("trk5_pT", trk5_pT, &b_trk5_pT);
   fChain->SetBranchAddress("trk5_eta", trk5_eta, &b_trk5_eta);
   fChain->SetBranchAddress("trk5_phi", trk5_phi, &b_trk5_phi);
   fChain->SetBranchAddress("trk5_d0", trk5_d0, &b_trk5_d0);
   fChain->SetBranchAddress("trk5_d0_sig", trk5_d0_sig, &b_trk5_d0_sig);
   fChain->SetBranchAddress("trk5_z0", trk5_z0, &b_trk5_z0);
   fChain->SetBranchAddress("trk5_z0_sig", trk5_z0_sig, &b_trk5_z0_sig);
   fChain->SetBranchAddress("trk5_vx", trk5_vx, &b_trk5_vx);
   fChain->SetBranchAddress("trk5_vy", trk5_vy, &b_trk5_vy);
   fChain->SetBranchAddress("trk5_vz", trk5_vz, &b_trk5_vz);
   fChain->SetBranchAddress("trk5_qOverP", trk5_qOverP, &b_trk5_qOverP);
   fChain->SetBranchAddress("trk5_passFilter", trk5_passFilter, &b_trk5_passFilter);
   fChain->SetBranchAddress("trk5_ExpIBLayer", trk5_ExpIBLayer, &b_trk5_ExpIBLayer);
   fChain->SetBranchAddress("trk5_NIBLayer", trk5_NIBLayer, &b_trk5_NIBLayer);
   fChain->SetBranchAddress("trk5_ExpBLayer", trk5_ExpBLayer, &b_trk5_ExpBLayer);
   fChain->SetBranchAddress("trk5_NBLayer", trk5_NBLayer, &b_trk5_NBLayer);
   fChain->SetBranchAddress("trk5_nDeadPixels", trk5_nDeadPixels, &b_trk5_nDeadPixels);
   fChain->SetBranchAddress("trk5_nDeadSCT", trk5_nDeadSCT, &b_trk5_nDeadSCT);
   fChain->SetBranchAddress("trk5_nPIXHoles", trk5_nPIXHoles, &b_trk5_nPIXHoles);
   fChain->SetBranchAddress("trk5_nPIXhits", trk5_nPIXhits, &b_trk5_nPIXhits);
   fChain->SetBranchAddress("trk5_nSCTHoles", trk5_nSCTHoles, &b_trk5_nSCTHoles);
   fChain->SetBranchAddress("trk5_nSCThits", trk5_nSCThits, &b_trk5_nSCThits);
   fChain->SetBranchAddress("trk5_nTRThits", trk5_nTRThits, &b_trk5_nTRThits);
   fChain->SetBranchAddress("trk5_nTRToutliers", trk5_nTRToutliers, &b_trk5_nTRToutliers);
   fChain->SetBranchAddress("trk5_pixeldEdx", trk5_pixeldEdx, &b_trk5_pixeldEdx);
   fChain->SetBranchAddress("trk5_nUsedHitsdEdx", trk5_nUsedHitsdEdx, &b_trk5_nUsedHitsdEdx);
   fChain->SetBranchAddress("trk5_nIBLOFsdEdx", trk5_nIBLOFsdEdx, &b_trk5_nIBLOFsdEdx);
   fChain->SetBranchAddress("trk5_charge", trk5_charge, &b_trk5_charge);
   fChain->SetBranchAddress("trk6_pT", trk6_pT, &b_trk6_pT);
   fChain->SetBranchAddress("trk6_eta", trk6_eta, &b_trk6_eta);
   fChain->SetBranchAddress("trk6_phi", trk6_phi, &b_trk6_phi);
   fChain->SetBranchAddress("trk6_d0", trk6_d0, &b_trk6_d0);
   fChain->SetBranchAddress("trk6_d0_sig", trk6_d0_sig, &b_trk6_d0_sig);
   fChain->SetBranchAddress("trk6_z0", trk6_z0, &b_trk6_z0);
   fChain->SetBranchAddress("trk6_z0_sig", trk6_z0_sig, &b_trk6_z0_sig);
   fChain->SetBranchAddress("trk6_vx", trk6_vx, &b_trk6_vx);
   fChain->SetBranchAddress("trk6_vy", trk6_vy, &b_trk6_vy);
   fChain->SetBranchAddress("trk6_vz", trk6_vz, &b_trk6_vz);
   fChain->SetBranchAddress("trk6_qOverP", trk6_qOverP, &b_trk6_qOverP);
   fChain->SetBranchAddress("trk6_passFilter", trk6_passFilter, &b_trk6_passFilter);
   fChain->SetBranchAddress("trk6_ExpIBLayer", trk6_ExpIBLayer, &b_trk6_ExpIBLayer);
   fChain->SetBranchAddress("trk6_NIBLayer", trk6_NIBLayer, &b_trk6_NIBLayer);
   fChain->SetBranchAddress("trk6_ExpBLayer", trk6_ExpBLayer, &b_trk6_ExpBLayer);
   fChain->SetBranchAddress("trk6_NBLayer", trk6_NBLayer, &b_trk6_NBLayer);
   fChain->SetBranchAddress("trk6_nDeadPixels", trk6_nDeadPixels, &b_trk6_nDeadPixels);
   fChain->SetBranchAddress("trk6_nDeadSCT", trk6_nDeadSCT, &b_trk6_nDeadSCT);
   fChain->SetBranchAddress("trk6_nPIXHoles", trk6_nPIXHoles, &b_trk6_nPIXHoles);
   fChain->SetBranchAddress("trk6_nPIXhits", trk6_nPIXhits, &b_trk6_nPIXhits);
   fChain->SetBranchAddress("trk6_nSCTHoles", trk6_nSCTHoles, &b_trk6_nSCTHoles);
   fChain->SetBranchAddress("trk6_nSCThits", trk6_nSCThits, &b_trk6_nSCThits);
   fChain->SetBranchAddress("trk6_nTRThits", trk6_nTRThits, &b_trk6_nTRThits);
   fChain->SetBranchAddress("trk6_nTRToutliers", trk6_nTRToutliers, &b_trk6_nTRToutliers);
   fChain->SetBranchAddress("trk6_pixeldEdx", trk6_pixeldEdx, &b_trk6_pixeldEdx);
   fChain->SetBranchAddress("trk6_nUsedHitsdEdx", trk6_nUsedHitsdEdx, &b_trk6_nUsedHitsdEdx);
   fChain->SetBranchAddress("trk6_nIBLOFsdEdx", trk6_nIBLOFsdEdx, &b_trk6_nIBLOFsdEdx);
   fChain->SetBranchAddress("trk6_charge", trk6_charge, &b_trk6_charge);
   fChain->SetBranchAddress("trk7_pass", trk7_pass, &b_trk7_pass);
   fChain->SetBranchAddress("trk7_pT", trk7_pT, &b_trk7_pT);
   fChain->SetBranchAddress("trk7_eta", trk7_eta, &b_trk7_eta);
   fChain->SetBranchAddress("trk7_phi", trk7_phi, &b_trk7_phi);
   fChain->SetBranchAddress("trk7_d0", trk7_d0, &b_trk7_d0);
   fChain->SetBranchAddress("trk7_d0_sig", trk7_d0_sig, &b_trk7_d0_sig);
   fChain->SetBranchAddress("trk7_z0", trk7_z0, &b_trk7_z0);
   fChain->SetBranchAddress("trk7_z0_sig", trk7_z0_sig, &b_trk7_z0_sig);
   fChain->SetBranchAddress("trk7_vx", trk7_vx, &b_trk7_vx);
   fChain->SetBranchAddress("trk7_vy", trk7_vy, &b_trk7_vy);
   fChain->SetBranchAddress("trk7_vz", trk7_vz, &b_trk7_vz);
   fChain->SetBranchAddress("trk7_qOverP", trk7_qOverP, &b_trk7_qOverP);
   fChain->SetBranchAddress("trk7_passFilter", trk7_passFilter, &b_trk7_passFilter);
   fChain->SetBranchAddress("trk7_d0_bias", trk7_d0_bias, &b_trk7_d0_bias);
   fChain->SetBranchAddress("trk7_d0_sig_bias", trk7_d0_sig_bias, &b_trk7_d0_sig_bias);
   fChain->SetBranchAddress("trk7_z0_bias", trk7_z0_bias, &b_trk7_z0_bias);
   fChain->SetBranchAddress("trk7_z0_sig_bias", trk7_z0_sig_bias, &b_trk7_z0_sig_bias);
   fChain->SetBranchAddress("trk7_qOverP_bias", trk7_qOverP_bias, &b_trk7_qOverP_bias);
   fChain->SetBranchAddress("trk7_d0_smear", trk7_d0_smear, &b_trk7_d0_smear);
   fChain->SetBranchAddress("trk7_d0_sig_smear", trk7_d0_sig_smear, &b_trk7_d0_sig_smear);
   fChain->SetBranchAddress("trk7_z0_smear", trk7_z0_smear, &b_trk7_z0_smear);
   fChain->SetBranchAddress("trk7_z0_sig_smear", trk7_z0_sig_smear, &b_trk7_z0_sig_smear);
   fChain->SetBranchAddress("trk7_ExpIBLayer", trk7_ExpIBLayer, &b_trk7_ExpIBLayer);
   fChain->SetBranchAddress("trk7_NIBLayer", trk7_NIBLayer, &b_trk7_NIBLayer);
   fChain->SetBranchAddress("trk7_ExpBLayer", trk7_ExpBLayer, &b_trk7_ExpBLayer);
   fChain->SetBranchAddress("trk7_NBLayer", trk7_NBLayer, &b_trk7_NBLayer);
   fChain->SetBranchAddress("trk7_nDeadPixels", trk7_nDeadPixels, &b_trk7_nDeadPixels);
   fChain->SetBranchAddress("trk7_nDeadSCT", trk7_nDeadSCT, &b_trk7_nDeadSCT);
   fChain->SetBranchAddress("trk7_nPIXHoles", trk7_nPIXHoles, &b_trk7_nPIXHoles);
   fChain->SetBranchAddress("trk7_nPIXhits", trk7_nPIXhits, &b_trk7_nPIXhits);
   fChain->SetBranchAddress("trk7_nSCTHoles", trk7_nSCTHoles, &b_trk7_nSCTHoles);
   fChain->SetBranchAddress("trk7_nSCThits", trk7_nSCThits, &b_trk7_nSCThits);
   fChain->SetBranchAddress("trk7_nTRThits", trk7_nTRThits, &b_trk7_nTRThits);
   fChain->SetBranchAddress("trk7_nTRToutliers", trk7_nTRToutliers, &b_trk7_nTRToutliers);
   fChain->SetBranchAddress("trk7_pixeldEdx", trk7_pixeldEdx, &b_trk7_pixeldEdx);
   fChain->SetBranchAddress("trk7_nUsedHitsdEdx", trk7_nUsedHitsdEdx, &b_trk7_nUsedHitsdEdx);
   fChain->SetBranchAddress("trk7_nIBLOFsdEdx", trk7_nIBLOFsdEdx, &b_trk7_nIBLOFsdEdx);
   fChain->SetBranchAddress("trk7_charge", trk7_charge, &b_trk7_charge);
   fChain->SetBranchAddress("trk8_pass", trk8_pass, &b_trk8_pass);
   fChain->SetBranchAddress("trk8_pT", trk8_pT, &b_trk8_pT);
   fChain->SetBranchAddress("trk8_eta", trk8_eta, &b_trk8_eta);
   fChain->SetBranchAddress("trk8_phi", trk8_phi, &b_trk8_phi);
   fChain->SetBranchAddress("trk8_d0", trk8_d0, &b_trk8_d0);
   fChain->SetBranchAddress("trk8_d0_sig", trk8_d0_sig, &b_trk8_d0_sig);
   fChain->SetBranchAddress("trk8_z0", trk8_z0, &b_trk8_z0);
   fChain->SetBranchAddress("trk8_z0_sig", trk8_z0_sig, &b_trk8_z0_sig);
   fChain->SetBranchAddress("trk8_vx", trk8_vx, &b_trk8_vx);
   fChain->SetBranchAddress("trk8_vy", trk8_vy, &b_trk8_vy);
   fChain->SetBranchAddress("trk8_vz", trk8_vz, &b_trk8_vz);
   fChain->SetBranchAddress("trk8_qOverP", trk8_qOverP, &b_trk8_qOverP);
   fChain->SetBranchAddress("trk8_passFilter", trk8_passFilter, &b_trk8_passFilter);
   fChain->SetBranchAddress("trk8_d0_bias", trk8_d0_bias, &b_trk8_d0_bias);
   fChain->SetBranchAddress("trk8_d0_sig_bias", trk8_d0_sig_bias, &b_trk8_d0_sig_bias);
   fChain->SetBranchAddress("trk8_z0_bias", trk8_z0_bias, &b_trk8_z0_bias);
   fChain->SetBranchAddress("trk8_z0_sig_bias", trk8_z0_sig_bias, &b_trk8_z0_sig_bias);
   fChain->SetBranchAddress("trk8_qOverP_bias", trk8_qOverP_bias, &b_trk8_qOverP_bias);
   fChain->SetBranchAddress("trk8_d0_smear", trk8_d0_smear, &b_trk8_d0_smear);
   fChain->SetBranchAddress("trk8_d0_sig_smear", trk8_d0_sig_smear, &b_trk8_d0_sig_smear);
   fChain->SetBranchAddress("trk8_z0_smear", trk8_z0_smear, &b_trk8_z0_smear);
   fChain->SetBranchAddress("trk8_z0_sig_smear", trk8_z0_sig_smear, &b_trk8_z0_sig_smear);
   fChain->SetBranchAddress("trk8_ExpIBLayer", trk8_ExpIBLayer, &b_trk8_ExpIBLayer);
   fChain->SetBranchAddress("trk8_NIBLayer", trk8_NIBLayer, &b_trk8_NIBLayer);
   fChain->SetBranchAddress("trk8_ExpBLayer", trk8_ExpBLayer, &b_trk8_ExpBLayer);
   fChain->SetBranchAddress("trk8_NBLayer", trk8_NBLayer, &b_trk8_NBLayer);
   fChain->SetBranchAddress("trk8_nDeadPixels", trk8_nDeadPixels, &b_trk8_nDeadPixels);
   fChain->SetBranchAddress("trk8_nDeadSCT", trk8_nDeadSCT, &b_trk8_nDeadSCT);
   fChain->SetBranchAddress("trk8_nPIXHoles", trk8_nPIXHoles, &b_trk8_nPIXHoles);
   fChain->SetBranchAddress("trk8_nPIXhits", trk8_nPIXhits, &b_trk8_nPIXhits);
   fChain->SetBranchAddress("trk8_nSCTHoles", trk8_nSCTHoles, &b_trk8_nSCTHoles);
   fChain->SetBranchAddress("trk8_nSCThits", trk8_nSCThits, &b_trk8_nSCThits);
   fChain->SetBranchAddress("trk8_nTRThits", trk8_nTRThits, &b_trk8_nTRThits);
   fChain->SetBranchAddress("trk8_nTRToutliers", trk8_nTRToutliers, &b_trk8_nTRToutliers);
   fChain->SetBranchAddress("trk8_pixeldEdx", trk8_pixeldEdx, &b_trk8_pixeldEdx);
   fChain->SetBranchAddress("trk8_nUsedHitsdEdx", trk8_nUsedHitsdEdx, &b_trk8_nUsedHitsdEdx);
   fChain->SetBranchAddress("trk8_nIBLOFsdEdx", trk8_nIBLOFsdEdx, &b_trk8_nIBLOFsdEdx);
   fChain->SetBranchAddress("trk8_charge", trk8_charge, &b_trk8_charge);
   fChain->SetBranchAddress("trk9_pass", trk9_pass, &b_trk9_pass);
   fChain->SetBranchAddress("trk9_pT", trk9_pT, &b_trk9_pT);
   fChain->SetBranchAddress("trk9_eta", trk9_eta, &b_trk9_eta);
   fChain->SetBranchAddress("trk9_phi", trk9_phi, &b_trk9_phi);
   fChain->SetBranchAddress("trk9_d0", trk9_d0, &b_trk9_d0);
   fChain->SetBranchAddress("trk9_d0_sig", trk9_d0_sig, &b_trk9_d0_sig);
   fChain->SetBranchAddress("trk9_z0", trk9_z0, &b_trk9_z0);
   fChain->SetBranchAddress("trk9_z0_sig", trk9_z0_sig, &b_trk9_z0_sig);
   fChain->SetBranchAddress("trk9_vx", trk9_vx, &b_trk9_vx);
   fChain->SetBranchAddress("trk9_vy", trk9_vy, &b_trk9_vy);
   fChain->SetBranchAddress("trk9_vz", trk9_vz, &b_trk9_vz);
   fChain->SetBranchAddress("trk9_qOverP", trk9_qOverP, &b_trk9_qOverP);
   fChain->SetBranchAddress("trk9_passFilter", trk9_passFilter, &b_trk9_passFilter);
   fChain->SetBranchAddress("trk9_d0_bias", trk9_d0_bias, &b_trk9_d0_bias);
   fChain->SetBranchAddress("trk9_d0_sig_bias", trk9_d0_sig_bias, &b_trk9_d0_sig_bias);
   fChain->SetBranchAddress("trk9_z0_bias", trk9_z0_bias, &b_trk9_z0_bias);
   fChain->SetBranchAddress("trk9_z0_sig_bias", trk9_z0_sig_bias, &b_trk9_z0_sig_bias);
   fChain->SetBranchAddress("trk9_qOverP_bias", trk9_qOverP_bias, &b_trk9_qOverP_bias);
   fChain->SetBranchAddress("trk9_d0_smear", trk9_d0_smear, &b_trk9_d0_smear);
   fChain->SetBranchAddress("trk9_d0_sig_smear", trk9_d0_sig_smear, &b_trk9_d0_sig_smear);
   fChain->SetBranchAddress("trk9_z0_smear", trk9_z0_smear, &b_trk9_z0_smear);
   fChain->SetBranchAddress("trk9_z0_sig_smear", trk9_z0_sig_smear, &b_trk9_z0_sig_smear);
   fChain->SetBranchAddress("trk9_ExpIBLayer", trk9_ExpIBLayer, &b_trk9_ExpIBLayer);
   fChain->SetBranchAddress("trk9_NIBLayer", trk9_NIBLayer, &b_trk9_NIBLayer);
   fChain->SetBranchAddress("trk9_ExpBLayer", trk9_ExpBLayer, &b_trk9_ExpBLayer);
   fChain->SetBranchAddress("trk9_NBLayer", trk9_NBLayer, &b_trk9_NBLayer);
   fChain->SetBranchAddress("trk9_nDeadPixels", trk9_nDeadPixels, &b_trk9_nDeadPixels);
   fChain->SetBranchAddress("trk9_nDeadSCT", trk9_nDeadSCT, &b_trk9_nDeadSCT);
   fChain->SetBranchAddress("trk9_nPIXHoles", trk9_nPIXHoles, &b_trk9_nPIXHoles);
   fChain->SetBranchAddress("trk9_nPIXhits", trk9_nPIXhits, &b_trk9_nPIXhits);
   fChain->SetBranchAddress("trk9_nSCTHoles", trk9_nSCTHoles, &b_trk9_nSCTHoles);
   fChain->SetBranchAddress("trk9_nSCThits", trk9_nSCThits, &b_trk9_nSCThits);
   fChain->SetBranchAddress("trk9_nTRThits", trk9_nTRThits, &b_trk9_nTRThits);
   fChain->SetBranchAddress("trk9_nTRToutliers", trk9_nTRToutliers, &b_trk9_nTRToutliers);
   fChain->SetBranchAddress("trk9_pixeldEdx", trk9_pixeldEdx, &b_trk9_pixeldEdx);
   fChain->SetBranchAddress("trk9_nUsedHitsdEdx", trk9_nUsedHitsdEdx, &b_trk9_nUsedHitsdEdx);
   fChain->SetBranchAddress("trk9_nIBLOFsdEdx", trk9_nIBLOFsdEdx, &b_trk9_nIBLOFsdEdx);
   fChain->SetBranchAddress("trk9_charge", trk9_charge, &b_trk9_charge);
   fChain->SetBranchAddress("truth_n", &truth_n, &b_truth_n);
   fChain->SetBranchAddress("truth_pdgId", &truth_pdgId, &b_truth_pdgId);
   fChain->SetBranchAddress("truth_motherID", &truth_motherID, &b_truth_motherID);
   fChain->SetBranchAddress("truth_mass", &truth_mass, &b_truth_mass);
   fChain->SetBranchAddress("truth_pT", &truth_pT, &b_truth_pT);
   fChain->SetBranchAddress("truth_eta", &truth_eta, &b_truth_eta);
   fChain->SetBranchAddress("truth_phi", &truth_phi, &b_truth_phi);
   Notify();
}

bool header::Notify()
{
   // The Notify() function is called when a new file is opened. This
   // can be either for a new TTree in a TChain or when when a new TTree
   // is started when using PROOF. It is normally not necessary to make changes
   // to the generated code, but the routine can be extended by the
   // user if needed. The return value is currently not used.

   return true;
}

void header::Show(Long64_t entry)
{
// Print contents of entry.
// If entry is not specified, print current entry
   if (!fChain) return;
   fChain->Show(entry);
}
Int_t header::Cut(Long64_t entry)
{
// This function may be called from Loop.
// returns  1 if entry is accepted.
// returns -1 otherwise.
   return 1;
}
#endif // #ifdef header_cxx
